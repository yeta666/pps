<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yeta.pps.mapper.MyStorageMapper">

    <!--待收货-->

    <select id="findCountInCGApplyOrder" parameterType="com.yeta.pps.vo.ProcurementApplyOrderVo"
            resultType="java.lang.Integer">
        select
        count(0)
        from
        procurement_apply_order_${storeId} as pao
        left join supplier_${storeId} as s on pao.supplier_id = s.id
        left join user_${storeId} as u on pao.user_id = u.id
        where pao.type = 1
        and pao.order_status in (1, 2)
        <if test="id != null">
            and pao.id = #{id}
        </if>
        <if test="supplierName != null">
            and s.name like concat('%', #{supplierName}, '%')
        </if>
        <if test="startTime != null and endTime != null">
            and date(pao.create_time) between #{startTime} and #{endTime}
        </if>
    </select>

    <select id="findPagedInCGApplyOrder" resultType="com.yeta.pps.vo.ProcurementApplyOrderVo">
        select
        pao.id,
        pao.type,
        '采购订单' as type_name,
        pao.create_time,
        pao.result_order_id,
        pao.order_status,
        pao.clear_status,
        s.id as supplier_id,
        s.name as supplier_name,
        pao.in_warehouse_id,
        pao.in_total_quantity,
        pao.in_received_quantity,
        pao.in_not_received_quantity,
        pao.out_warehouse_id,
        pao.out_total_quantity,
        pao.out_sent_quantity,
        pao.out_not_sent_quantity,
        u.name as user_name,
        pao.remark
        from
        procurement_apply_order_${vo.storeId} as pao
        left join supplier_${vo.storeId} as s on pao.supplier_id = s.id
        left join user_${vo.storeId} as u on pao.user_id = u.id
        where pao.type = 1
        and pao.order_status in (1, 2)
        <if test="vo.id != null">
            and pao.id = #{vo.id}
        </if>
        <if test="vo.supplierName != null">
            and s.name like concat('%', #{vo.supplierName}, '%')
        </if>
        <if test="vo.startTime != null and vo.endTime != null">
            and date(pao.create_time) between #{vo.startTime} and #{vo.endTime}
        </if>
        order by pao.create_time desc
        limit #{pageVo.start}, #{pageVo.pageSize};
    </select>

    <select id="findCountInTHHApplyOrder" parameterType="com.yeta.pps.vo.ProcurementApplyOrderVo"
            resultType="java.lang.Integer">
        select
        sum(a.b)
        from
        (
        select
        count(0) as b
        from
        (
        procurement_apply_order_${storeId} as pao
        left join supplier_${storeId} as s on s.id = pao.supplier_id
        )
        left join user_${storeId} as u on u.id = pao.user_id
        where pao.type = 3
        and pao.order_status in (7, 8, 9, 10, 11, 12)
        <if test="id != null">
            and pao.id = #{id}
        </if>
        <if test="supplierName != null">
            and s.name like concat('%', #{supplierName}, '%')
        </if>
        <if test="startTime != null and endTime != null">
            and date(pao.create_time) between #{startTime} and #{endTime}
        </if>
        union all
        select
        count(0) as b
        from
        (
        sell_apply_order_${storeId} as sao
        left join client as c on c.id = sao.client_id
        )
        left join user_${storeId} as u on u.id = sao.user_id
        where sao.type in (3, 4)
        and sao.order_status in (1, 2, 7, 8, 9, 10, 11, 12)
        <if test="id != null">
            and sao.id = #{id}
        </if>
        <if test="supplierName != null">
            and c.name like concat('%', #{supplierName}, '%')
        </if>
        <if test="startTime != null and endTime != null">
            and date(sao.create_time) between #{startTime} and #{endTime}
        </if>
        ) as a
    </select>

    <select id="findPagedInTHHApplyOrder" resultType="com.yeta.pps.vo.ProcurementApplyOrderVo">
        (
        select
        pao.id,
        pao.type,
        '采购换货申请单' as type_name,
        pao.create_time,
        pao.result_order_id,
        pao.order_status,
        pao.clear_status,
        s.id as supplier_id,
        s.name as supplier_name,
        pao.in_warehouse_id,
        pao.in_total_quantity,
        pao.in_received_quantity,
        pao.in_not_received_quantity,
        pao.out_warehouse_id,
        pao.out_total_quantity,
        pao.out_sent_quantity,
        pao.out_not_sent_quantity,
        u.name as user_name,
        pao.remark
        from
        (
        procurement_apply_order_${vo.storeId} as pao
        left join supplier_${vo.storeId} as s on s.id = pao.supplier_id
        )
        left join user_${vo.storeId} as u on u.id = pao.user_id
        where pao.type = 3
        and pao.order_status in (7, 8, 9, 10, 11, 12)
        <if test="vo.id != null">
            and pao.id = #{vo.id}
        </if>
        <if test="vo.supplierName != null">
            and s.name like concat('%', #{vo.supplierName}, '%')
        </if>
        <if test="vo.startTime != null and vo.endTime != null">
            and date(pao.create_time) between #{vo.startTime} and #{vo.endTime}
        </if>
        order by pao.create_time desc
        )
        union all
        (
        select
        sao.id,
        sao.type,
        if ( sao.type = 3,
        '销售退货申请单',
        '销售换货申请单'
        ) as type_name,
        sao.create_time,
        sao.result_order_id,
        sao.order_status,
        sao.clear_status,
        c.id as supplier_id,
        c.name as supplier_name,
        sao.in_warehouse_id,
        sao.in_total_quantity,
        sao.in_received_quantity,
        sao.in_not_received_quantity,
        sao.out_warehouse_id,
        sao.out_total_quantity,
        sao.out_sent_quantity,
        sao.out_not_sent_quantity,
        u.name as user_name,
        sao.remark
        from
        (
        sell_apply_order_${vo.storeId} as sao
        left join client as c on c.id = sao.client_id
        )
        left join user_${vo.storeId} as u on u.id = sao.user_id
        where sao.type IN (3, 4)
        and sao.order_status in (1, 2, 7, 8, 9, 10, 11, 12)
        <if test="vo.id != null">
            and sao.id = #{vo.id}
        </if>
        <if test="vo.supplierName != null">
            and c.name like concat('%', #{vo.supplierName}, '%')
        </if>
        <if test="vo.startTime != null and vo.endTime != null">
            and date(sao.create_time) between #{vo.startTime} and #{vo.endTime}
        </if>
        order by sao.create_time desc
        )
        limit #{pageVo.start}, #{pageVo.pageSize};
    </select>

    <!--待发货-->

    <select id="findCountOutCGApplyOrder" parameterType="com.yeta.pps.vo.ProcurementApplyOrderVo"
            resultType="java.lang.Integer">
        select
        count(0)
        from
        (
        sell_apply_order_${storeId} as sao
        left join client as c on c.id = sao.client_id
        )
        left join user_${storeId} as u on u.id = sao.user_id
        where sao.type = 2
        and sao.order_status in (4, 5)
        <if test="id != null">
            and sao.id = #{id}
        </if>
        <if test="supplierName != null">
            and c.name like concat('%', #{supplierName}, '%')
        </if>
        <if test="startTime != null and endTime != null">
            and date(sao.create_time) between #{startTime} and #{endTime}
        </if>
    </select>

    <select id="findPagedOutCGApplyOrder" resultType="com.yeta.pps.vo.ProcurementApplyOrderVo">
        select
        sao.id,
        sao.type,
        '销售订单' as type_name,
        sao.create_time,
        sao.result_order_id,
        sao.order_status,
        sao.clear_status,
        c.id as target_id,
        c.name as target_name,
        sao.in_warehouse_id,
        sao.in_total_quantity,
        sao.in_received_quantity,
        sao.in_not_received_quantity,
        sao.out_warehouse_id,
        sao.out_total_quantity,
        sao.out_sent_quantity,
        sao.out_not_sent_quantity,
        u.name as user_name,
        sao.remark
        from
        (
        sell_apply_order_${vo.storeId} as sao
        left join client as c on c.id = sao.client_id
        )
        left join user_${vo.storeId} as u on u.id = sao.user_id
        where sao.type = 2
        and sao.order_status in (4, 5)
        <if test="vo.id != null">
            and sao.id = #{vo.id}
        </if>
        <if test="vo.supplierName != null">
            and c.name like concat('%', #{vo.supplierName}, '%')
        </if>
        <if test="vo.startTime != null and vo.endTime != null">
            and date(sao.create_time) between #{vo.startTime} and #{vo.endTime}
        </if>
        order by sao.create_time desc
        limit #{pageVo.start}, #{pageVo.pageSize};
    </select>

    <select id="findCountOutTHHApplyOrder" parameterType="com.yeta.pps.vo.ProcurementApplyOrderVo"
            resultType="java.lang.Integer">
        select
        sum(a.b)
        from
        (
        select
        count(0) as b
        FROM
        (
        procurement_apply_order_${storeId} as pao
        left join supplier_${storeId} as s on s.id = pao.supplier_id
        )
        left join user_${storeId} as u on u.id = pao.user_id
        where pao.type in (2, 3)
        and pao.order_status in (4, 5, 7, 8, 10, 11, 13, 14)
        <if test="id != null">
            and pao.id = #{id}
        </if>
        <if test="supplierName != null">
            and s.name like concat('%', #{supplierName}, '%')
        </if>
        <if test="startTime != null and endTime != null">
            and date(pao.create_time) between #{startTime} and #{endTime}
        </if>
        union all
        select
        count(0) as b
        from
        (
        sell_apply_order_${storeId} as sao
        left join client as c on c.id = sao.client_id
        )
        left join user_${storeId} as u on u.id = sao.user_id
        where sao.type = 4
        and sao.order_status in (7, 8, 10, 11, 13, 14)
        <if test="id != null">
            and sao.id = #{id}
        </if>
        <if test="supplierName != null">
            and c.name like concat('%', #{supplierName}, '%')
        </if>
        <if test="startTime != null and endTime != null">
            and date(sao.create_time) between #{startTime} and #{endTime}
        </if>
        ) as a
    </select>

    <select id="findPagedOutTHHApplyOrder" resultType="com.yeta.pps.vo.ProcurementApplyOrderVo">
        (
        select
        pao.id,
        pao.type,
        if (pao.type = 2,
        '采购退货申请单',
        '采购换货申请单'
        ) as type_name,
        pao.create_time,
        pao.result_order_id,
        pao.order_status,
        pao.clear_status,
        s.id as target_id,
        s.name as target_name,
        pao.in_warehouse_id,
        pao.in_total_quantity,
        pao.in_received_quantity,
        pao.in_not_received_quantity,
        pao.out_warehouse_id,
        pao.out_total_quantity,
        pao.out_sent_quantity,
        pao.out_not_sent_quantity,
        u.name as user_name,
        pao.remark
        from
        (
        procurement_apply_order_${vo.storeId} as pao
        left join supplier_${vo.storeId} as s on s.id = pao.supplier_id
        )
        left join user_${vo.storeId} as u on u.id = pao.user_id
        where pao.type in (2, 3)
        and pao.order_status in (4, 5, 7, 8, 10, 11, 13, 14)
        <if test="vo.id != null">
            and pao.id = #{vo.id}
        </if>
        <if test="vo.supplierName != null">
            and s.name like concat('%', #{vo.supplierName}, '%')
        </if>
        <if test="vo.startTime != null and vo.endTime != null">
            and date(pao.create_time) between #{vo.startTime} and #{vo.endTime}
        </if>
        order by pao.create_time desc
        )
        union all
        (
        select
        sao.id,
        sao.type,
        '销售换货申请单' as type_name,
        sao.create_time,
        sao.result_order_id,
        sao.order_status,
        sao.clear_status,
        c.id as target_id,
        c.name as target_name,
        sao.in_warehouse_id,
        sao.in_total_quantity,
        sao.in_received_quantity,
        sao.in_not_received_quantity,
        sao.out_warehouse_id,
        sao.out_total_quantity,
        sao.out_sent_quantity,
        sao.out_not_sent_quantity,
        u.name as user_name,
        sao.remark
        from
        (
        sell_apply_order_${vo.storeId} as sao
        left join client as c on c.id = sao.client_id
        )
        left join user_${vo.storeId} as u on u.id = sao.user_id
        where sao.type = 4
        and sao.order_status in (7, 8, 10, 11, 13, 14)
        <if test="vo.id != null">
            and sao.id = #{vo.id}
        </if>
        <if test="vo.supplierName != null">
            and c.name like concat('%', #{vo.supplierName}, '%')
        </if>
        <if test="vo.startTime != null and vo.endTime != null">
            and date(sao.create_time) between #{vo.startTime} and #{vo.endTime}
        </if>
        order by sao.create_time desc
        )
        limit #{pageVo.start}, #{pageVo.pageSize};
    </select>

    <!--收/发货单-->

    <insert id="addStorageOrder" parameterType="com.yeta.pps.vo.StorageOrderVo">
        insert into storage_order_${storeId} (id,
                                              type,
                                              create_time,
                                              apply_order_id,
                                              order_status,
                                              quantity,
                                              logistics_company,
                                              waybill_number,
                                              user_id,
                                              remark)
        values (#{id},
                #{type},
                #{createTime},
                #{applyOrderId},
                #{orderStatus},
                #{quantity},
                #{logisticsCompany},
                #{waybillNumber},
                #{userId},
                #{remark});
    </insert>

    <update id="redDashed" parameterType="com.yeta.pps.vo.StorageOrderVo">
        update storage_order_${storeId}
        set order_status = -1
        where id = #{id}
          and order_status &gt; 0;
    </update>

    <select id="findCountStorageOrder" parameterType="com.yeta.pps.vo.StorageOrderVo" resultType="java.lang.Integer">
        SELECT
        COUNT(0)
        FROM
        storage_order_${storeId} AS so
        LEFT JOIN procurement_apply_order_${storeId} AS pao ON pao.id = so.apply_order_id
        LEFT JOIN supplier_${storeId} AS s ON s.id = pao.supplier_id
        LEFT JOIN sell_apply_order_${storeId} AS sao ON sao.id = so.apply_order_id
        LEFT JOIN client AS c ON c.id = sao.client_id
        <if test="flag == 1">
            LEFT JOIN warehouse_${storeId} AS w ON (
            w.id = pao.in_warehouse_id
            OR w.id = sao.in_warehouse_id
            )
        </if>
        <if test="flag == 0">
            LEFT JOIN warehouse_${storeId} AS w ON (
            w.id = pao.out_warehouse_id
            OR w.id = sao.out_warehouse_id
            )
        </if>
        LEFT JOIN user_${storeId} AS u ON u.id = so.user_id
        WHERE
        1 = 1
        <if test="startTime != null and endTime != null">
            AND DATE(so.create_time) BETWEEN #{startTime} AND #{endTime}
        </if>
        <if test="targetName != null">
            AND s.name LIKE concat('%', #{targetName}, '%') OR c.name LIKE concat('%', #{targetName}, '%')
        </if>
        <if test="warehouseId != null and flag == 1">
            AND pao.in_warehouse_id = #{warehouseId} OR sao.in_warehouse_id = #{warehouseId}
        </if>
        <if test="warehouseId != null and flag == 0">
            AND pao.out_warehouse_id = #{warehouseId} OR sao.out_warehouse_id = #{warehouseId}
        </if>
        <if test="flag == 1">
            AND so.type IN (1, 2)
        </if>
        <if test="flag == 0">
            AND so.type IN (3, 4)
        </if>
    </select>

    <select id="findAllPagedStorageOrder" resultType="com.yeta.pps.vo.StorageOrderVo">
        SELECT
        so.id,
        so.type,
        so.create_time,
        so.apply_order_id,
        IF (pao.supplier_id IS NOT NULL, pao.supplier_id, sao.client_id ) AS target_id,
        IF (s.name IS NOT NULL, s.name, c.name) AS target_name,
        IF (s.contact_number IS NOT NULL, s.contact_number, c.phone) AS targetPhone,
        <if test="vo.flag == 1">
            IF (pao.in_warehouse_id IS NOT NULL, pao.in_warehouse_id, sao.in_warehouse_id) AS warehouse_id,
        </if>
        <if test="vo.flag == 0">
            IF (pao.out_warehouse_id IS NOT NULL, pao.out_warehouse_id, sao.out_warehouse_id) AS warehouse_id,
        </if>
        w.name AS warehouse_name,
        so.quantity,
        so.logistics_company,
        so.waybill_number,
        so.user_id,
        u.name AS user_name,
        so.remark
        FROM
        storage_order_${vo.storeId} AS so
        LEFT JOIN procurement_apply_order_${vo.storeId} AS pao ON pao.id = so.apply_order_id
        LEFT JOIN supplier_${vo.storeId} AS s ON s.id = pao.supplier_id
        LEFT JOIN sell_apply_order_${vo.storeId} AS sao ON sao.id = so.apply_order_id
        LEFT JOIN client AS c ON c.id = sao.client_id
        <if test="vo.flag == 1">
            LEFT JOIN warehouse_${vo.storeId} AS w ON (
            w.id = pao.in_warehouse_id
            OR w.id = sao.in_warehouse_id
            )
        </if>
        <if test="vo.flag == 0">
            LEFT JOIN warehouse_${vo.storeId} AS w ON (
            w.id = pao.out_warehouse_id
            OR w.id = sao.out_warehouse_id
            )
        </if>
        LEFT JOIN user_${vo.storeId} AS u ON u.id = so.user_id
        WHERE
        1 = 1
        <if test="vo.startTime != null and vo.endTime != null">
            AND DATE(so.create_time) BETWEEN #{vo.startTime} AND #{vo.endTime}
        </if>
        <if test="vo.targetName != null">
            AND s.name LIKE concat('%', #{vo.targetName}, '%') OR c.name LIKE concat('%', #{vo.targetName}, '%')
        </if>
        <if test="vo.warehouseId != null and vo.flag == 1">
            AND pao.in_warehouse_id = #{vo.warehouseId} OR sao.in_warehouse_id = #{vo.warehouseId}
        </if>
        <if test="vo.warehouseId != null and vo.flag == 0">
            AND pao.out_warehouse_id = #{vo.warehouseId} OR sao.out_warehouse_id = #{vo.warehouseId}
        </if>
        <if test="vo.flag == 1">
            AND so.type IN (1, 2)
        </if>
        <if test="vo.flag == 0">
            AND so.type IN (3, 4)
        </if>
        ORDER BY
        so.create_time DESC
        limit
        #{pageVo.start}, #{pageVo.pageSize};
    </select>

    <select id="findAllStorageOrder" parameterType="com.yeta.pps.vo.StorageOrderVo"
            resultType="com.yeta.pps.vo.StorageOrderVo">
        SELECT
        so.id,
        so.type,
        so.create_time,
        so.apply_order_id,
        IF (pao.supplier_id IS NOT NULL, pao.supplier_id, sao.client_id ) AS target_id,
        IF (s.name IS NOT NULL, s.name, c.name) AS target_name,
        IF (s.contact_number IS NOT NULL, s.contact_number, c.phone) AS targetPhone,
        <if test="flag == 1">
            IF (pao.in_warehouse_id IS NOT NULL, pao.in_warehouse_id, sao.in_warehouse_id) AS warehouse_id,
        </if>
        <if test="flag == 0">
            IF (pao.out_warehouse_id IS NOT NULL, pao.out_warehouse_id, sao.out_warehouse_id) AS warehouse_id,
        </if>
        w.name AS warehouse_name,
        so.quantity,
        so.logistics_company,
        so.waybill_number,
        so.user_id,
        u.name AS user_name,
        so.remark
        FROM
        storage_order_${storeId} AS so
        LEFT JOIN procurement_apply_order_${storeId} AS pao ON pao.id = so.apply_order_id
        LEFT JOIN supplier_${storeId} AS s ON s.id = pao.supplier_id
        LEFT JOIN sell_apply_order_${storeId} AS sao ON sao.id = so.apply_order_id
        LEFT JOIN client AS c ON c.id = sao.client_id
        <if test="flag == 1">
            LEFT JOIN warehouse_${storeId} AS w ON (
            w.id = pao.in_warehouse_id
            OR w.id = sao.in_warehouse_id
            )
        </if>
        <if test="flag == 0">
            LEFT JOIN warehouse_${storeId} AS w ON (
            w.id = pao.out_warehouse_id
            OR w.id = sao.out_warehouse_id
            )
        </if>
        LEFT JOIN user_${storeId} AS u ON u.id = so.user_id
        WHERE
        1 = 1
        <if test="startTime != null and endTime != null">
            AND DATE(so.create_time) BETWEEN #{startTime} AND #{endTime}
        </if>
        <if test="targetName != null">
            AND s.name LIKE concat('%', #{targetName}, '%') OR c.name LIKE concat('%', #{targetName}, '%')
        </if>
        <if test="warehouseId != null and flag == 1">
            AND pao.in_warehouse_id = #{warehouseId} OR sao.in_warehouse_id = #{warehouseId}
        </if>
        <if test="warehouseId != null and flag == 0">
            AND pao.out_warehouse_id = #{warehouseId} OR sao.out_warehouse_id = #{warehouseId}
        </if>
        <if test="flag == 1">
            AND so.type IN (1, 2)
        </if>
        <if test="flag == 0">
            AND so.type IN (3, 4)
        </if>
        ORDER BY
        so.create_time DESC;
    </select>

    <select id="findStorageOrderById" parameterType="com.yeta.pps.vo.StorageOrderVo"
            resultType="com.yeta.pps.vo.StorageOrderVo">
        select id,
               type,
               create_time,
               apply_order_id,
               order_status,
               quantity,
               logistics_company,
               waybill_number,
               user_id,
               remark
        from storage_order_${storeId}
        where id = #{id};
    </select>

    <select id="findStorageOrderPrimaryKey" parameterType="com.yeta.pps.vo.StorageOrderVo"
            resultType="java.lang.String">
        select id
        from storage_order_${storeId}
        where date(create_time) = date(now())
          and type = #{type};
    </select>

    <!--其他入/出库单、报溢/损单、成本调价单、库存盘点单-->

    <insert id="addStorageResultOrder" parameterType="com.yeta.pps.vo.StorageResultOrderVo">
        insert into storage_result_order_${storeId} (id,
                                                     type,
                                                     create_time,
                                                     order_status,
                                                     target_id,
                                                     warehouse_id,
                                                     total_quantity,
                                                     total_money,
                                                     total_check_quantity,
                                                     total_in_quantity,
                                                     total_in_money,
                                                     total_out_quantity,
                                                     total_out_money,
                                                     user_id,
                                                     remark)
        values (#{id},
                #{type},
                #{createTime},
                #{orderStatus},
                #{targetId},
                #{warehouseId},
                #{totalQuantity},
                #{totalMoney},
                #{totalCheckQuantity},
                #{totalInQuantity},
                #{totalInMoney},
                #{totalOutQuantity},
                #{totalOutMoney},
                #{userId},
                #{remark});
    </insert>

    <update id="redDashedStorageResultOrder" parameterType="com.yeta.pps.vo.StorageResultOrderVo">
        update storage_result_order_${storeId}
        set order_status = -1
        where id = #{id}
          and order_status &gt; 0;
    </update>

    <select id="findCountStorageResultOrder" parameterType="com.yeta.pps.vo.StorageResultOrderVo"
            resultType="java.lang.Integer">
        select
        count(0)
        from
        storage_result_order_${storeId} as sro
        left join warehouse_${storeId} as w on sro.warehouse_id = w.id
        left join user_${storeId} as u on sro.user_id = u.id
        left join supplier_${storeId} as s on sro.target_id = s.id
        left join client as c on sro.target_id = c.id
        where sro.type = #{type}
        <if test="id != null">
            and sro.id = #{id}
        </if>
        <if test="startTime != null and endTime != null">
            and date(sro.create_time) between #{startTime} and #{endTime}
        </if>
        order by sro.create_time desc;
    </select>

    <select id="findAllPagedStorageResultOrder" resultType="com.yeta.pps.vo.StorageResultOrderVo">
        select
        sro.id,
        sro.type,
        sro.create_time,
        sro.order_status,
        sro.target_id,
        if (c.name is not null, c.name, s.name) as target_name,
        sro.warehouse_id,
        w.name as warehouse_name,
        sro.total_quantity,
        sro.total_money,
        sro.total_check_quantity,
        sro.total_in_quantity,
        sro.total_in_money,
        sro.total_out_quantity,
        sro.total_out_money,
        sro.user_id,
        u.name as user_name,
        sro.remark
        from
        storage_result_order_${vo.storeId} as sro
        left join warehouse_${vo.storeId} as w on sro.warehouse_id = w.id
        left join user_${vo.storeId} as u on sro.user_id = u.id
        left join supplier_${vo.storeId} as s on sro.target_id = s.id
        left join client as c on sro.target_id = c.id
        where sro.type = #{vo.type}
        <if test="vo.id != null">
            and sro.id = #{vo.id}
        </if>
        <if test="vo.startTime != null and vo.endTime != null">
            and date(sro.create_time) between #{vo.startTime} and #{vo.endTime}
        </if>
        order by sro.create_time desc
        limit #{pageVo.start}, #{pageVo.pageSize};
    </select>

    <select id="findAllStorageResultOrder" parameterType="com.yeta.pps.vo.StorageResultOrderVo" resultType="com.yeta.pps.vo.StorageResultOrderVo">
        select
        sro.id,
        sro.type,
        sro.create_time,
        sro.order_status,
        sro.target_id,
        if (c.name is not null, c.name, s.name) as target_name,
        sro.warehouse_id,
        w.name as warehouse_name,
        sro.total_quantity,
        sro.total_money,
        sro.total_check_quantity,
        sro.total_in_quantity,
        sro.total_in_money,
        sro.total_out_quantity,
        sro.total_out_money,
        sro.user_id,
        u.name as user_name,
        sro.remark
        from
        storage_result_order_${storeId} as sro
        left join warehouse_${storeId} as w on sro.warehouse_id = w.id
        left join user_${storeId} as u on sro.user_id = u.id
        left join supplier_${storeId} as s on sro.target_id = s.id
        left join client as c on sro.target_id = c.id
        where sro.type = #{type}
        <if test="id != null">
            and sro.id = #{id}
        </if>
        <if test="startTime != null and endTime != null">
            and date(sro.create_time) between #{startTime} and #{endTime}
        </if>
        order by sro.create_time desc;
    </select>

    <resultMap id="storageResultOrderVoMap" type="com.yeta.pps.vo.StorageResultOrderVo">
        <id column="id" property="id"/>
        <result column="type" property="type"/>
        <result column="create_time" property="createTime"/>
        <result column="target_id" property="targetId"/>
        <result column="target_name" property="targetName"/>
        <result column="order_status" property="orderStatus"/>
        <result column="warehouse_id" property="warehouseId"/>
        <result column="warehouse_name" property="warehouseName"/>
        <result column="total_quantity" property="totalQuantity"/>
        <result column="total_money" property="totalMoney"/>
        <result column="total_check_quantity" property="totalCheckQuantity"/>
        <result column="total_in_quantity" property="totalInQuantity"/>
        <result column="total_in_money" property="totalInMoney"/>
        <result column="total_out_quantity" property="totalOutQuantity"/>
        <result column="total_out_money" property="totalOutMoney"/>
        <result column="user_id" property="userId"/>
        <result column="user_name" property="userName"/>
        <result column="remark" property="remark"/>
        <collection property="details" ofType="com.yeta.pps.vo.OrderGoodsSkuVo">
            <result column="ogs_id" property="id"/>
            <result column="ogs_type" property="type"/>
            <result column="ogs_order_id" property="orderId"/>
            <result column="ogs_goods_sku_id" property="goodsSkuId"/>
            <result column="gs_sku" property="goodsSkuSku"/>
            <result column="g_id" property="goodsId"/>
            <result column="g_name" property="goodsName"/>
            <result column="g_bar_code" property="goodsBarCode"/>
            <result column="ogs_quantity" property="quantity"/>
            <result column="ogs_money" property="money"/>
            <result column="ogs_check_quantity" property="checkQuantity"/>
            <result column="ogs_check_money" property="checkMoney"/>
            <result column="ogs_check_total_money" property="checkTotalMoney"/>
            <result column="ogs_after_change_check_money" property="afterChangeCheckMoney"/>
            <result column="ogs_change_check_total_money" property="changeCheckTotalMoney"/>
            <result column="ogs_in_quantity" property="inQuantity"/>
            <result column="ogs_in_money" property="inMoney"/>
            <result column="ogs_out_quantity" property="outQuantity"/>
            <result column="ogs_out_money" property="outMoney"/>
            <result column="ogs_remark" property="remark"/>
        </collection>
    </resultMap>

    <select id="findAllStorageResultOrderDetail" parameterType="com.yeta.pps.vo.StorageResultOrderVo"
            resultMap="storageResultOrderVoMap">
        select
        sro.id,
        sro.type,
        sro.create_time,
        sro.order_status,
        sro.target_id,
        if (c.name is not null, c.name, s.name) as target_name,
        sro.warehouse_id,
        w.name as warehouse_name,
        sro.total_quantity,
        sro.total_money,
        sro.total_check_quantity,
        sro.total_in_quantity,
        sro.total_in_money,
        sro.total_out_quantity,
        sro.total_out_money,
        sro.user_id,
        u.name as user_name,
        sro.remark,
        ogs.id as ogs_id,
        ogs.type as ogs_type,
        ogs.order_id as ogs_order_id,
        ogs.goods_sku_id as ogs_goods_sku_id,
        gs.sku as gs_sku,
        g.id as g_id,
        g.name as g_name,
        g.bar_code as g_bar_code,
        ogs.quantity as ogs_quantity,
        ogs.money as ogs_money,
        ogs.check_quantity as ogs_check_quantity,
        ogs.check_money as ogs_check_money,
        ogs.check_total_money as ogs_check_total_money,
        ogs.after_change_check_money as ogs_after_change_check_money,
        ogs.change_check_total_money as ogs_change_check_total_money,
        ogs.in_quantity as ogs_in_quantity,
        ogs.in_money as ogs_in_money,
        ogs.out_quantity as ogs_out_quantity,
        ogs.out_money as ogs_out_money,
        ogs.remark as ogs_remark
        from
        (
        (
        (
        (
        (
        (
        storage_result_order_${storeId} as sro
        left join warehouse_${storeId} as w on sro.warehouse_id = w.id
        )
        left join user_${storeId} as u on sro.user_id = u.id
        )
        left join supplier_${storeId} as s on sro.target_id = s.id
        )
        left join client as c on sro.target_id = c.id
        )
        left join order_goods_sku_${storeId} as ogs on sro.id = ogs.order_id
        )
        left join goods_sku_${storeId} as gs on ogs.goods_sku_id = gs.id
        )
        left join goods_${storeId} as g on gs.goods_id = g.id
        where
        1 = 1
        <if test="id != null">
            and sro.id = #{id}
        </if>
        <if test="targetId != null">
            and sro.target_id = #{targetId}
        </if>
    </select>

    <select id="findStorageResultOrderPrimaryKey" parameterType="com.yeta.pps.vo.StorageResultOrderVo"
            resultType="java.lang.String">
        select id
        from storage_result_order_${storeId}
        where date(create_time) = date(now())
          and type = #{type};
    </select>

    <!--查库存-->

    <select id="findCountCurrentInventory" parameterType="com.yeta.pps.vo.GoodsWarehouseSkuVo"
            resultType="java.lang.Integer">
        select
        count(*)
        from
        (
        select
        count(*)
        from
        (
        (
        (
        goods_${storeId} as g
        inner join goods_sku_${storeId} as gs on g.id = gs.goods_id
        )
        inner join warehouse_goods_sku_${storeId} as wgs on gs.id = wgs.goods_sku_id
        )
        inner join warehouse_${storeId} as w on w.id = wgs.warehouse_id
        )
        inner join goods_type_${storeId} as gt on g.type_id = gt.id
        where
        1 = 1
        <if test="id != null">
            and g.id like concat('%', #{id}, '%')
        </if>
        <if test="name != null">
            and g.name like concat('%', #{name}, '%')
        </if>
        <if test="typeId != null">
            and g.type_id = #{typeId}
        </if>
        group by g.id
        ) as temp;
    </select>

    <select id="findPagedCurrentInventory" resultType="com.yeta.pps.vo.GoodsWarehouseSkuVo">
        select
        g.id,
        g.name,
        g.bar_code,
        gt.name as type_name,
        g.image,
        sum(wgs.real_inventory) as real_inventory,
        sum(wgs.not_sent_quantity) as not_sent_quantity,
        sum(wgs.not_received_quantity) as not_received_quantity,
        sum(wgs.can_use_inventory) as can_use_inventory,
        sum(wgs.book_inventory) as book_inventory
        from
        (
        (
        (
        goods_${vo.storeId} as g
        inner join goods_sku_${vo.storeId} as gs on g.id = gs.goods_id
        )
        inner join warehouse_goods_sku_${vo.storeId} as wgs on gs.id = wgs.goods_sku_id
        )
        inner join warehouse_${vo.storeId} as w on w.id = wgs.warehouse_id
        )
        inner join goods_type_${vo.storeId} as gt on g.type_id = gt.id
        where
        1 = 1
        <if test="vo.id != null">
            and g.id like concat('%', #{vo.id}, '%')
        </if>
        <if test="vo.name != null">
            and g.name like concat('%', #{vo.name}, '%')
        </if>
        <if test="vo.typeId != null">
            and g.type_id = #{vo.typeId}
        </if>
        group by g.id
        limit #{pageVo.start}, #{pageVo.pageSize};
    </select>

    <select id="findCountDistributionByGoodsId" parameterType="com.yeta.pps.vo.GoodsWarehouseSkuVo"
            resultType="java.lang.Integer">
        select count(*)
        from (select count(*)
              from (
                           (
                                   (
                                           goods_${storeId} as g
                                                   inner join goods_sku_${storeId} as gs on g.id = gs.goods_id
                                           )
                                           inner join warehouse_goods_sku_${storeId} as wgs on gs.id = wgs.goods_sku_id
                                   )
                                   inner join warehouse_${storeId} as w on w.id = wgs.warehouse_id
                           )
                       inner join goods_type_${storeId} as gt on g.type_id = gt.id
              where g.id = #{id}
              group by w.id) as temp;
    </select>

    <select id="findPagedDistributionByGoodsId" resultType="com.yeta.pps.vo.GoodsWarehouseSkuVo">
        select g.id,
               g.name,
               g.bar_code,
               w.id                           as warehouse_id,
               w.name                         as warehouse_name,
               sum(wgs.real_inventory)        as real_inventory,
               sum(wgs.not_sent_quantity)     as not_sent_quantity,
               sum(wgs.not_received_quantity) as not_received_quantity,
               sum(wgs.can_use_inventory)     as can_use_inventory,
               sum(wgs.book_inventory)        as book_inventory
        from (
                     (
                             (
                                     goods_${vo.storeId} as g
                                             inner join goods_sku_${vo.storeId} as gs on g.id = gs.goods_id
                                     )
                                     inner join warehouse_goods_sku_${vo.storeId} as wgs on gs.id = wgs.goods_sku_id
                             )
                             inner join warehouse_${vo.storeId} as w on w.id = wgs.warehouse_id
                     )
                 inner join goods_type_${vo.storeId} as gt on g.type_id = gt.id
        where g.id = #{vo.id}
        group by w.id
        limit #{pageVo.start}, #{pageVo.pageSize};
    </select>

    <select id="findCountOrderByGoodsId" parameterType="com.yeta.pps.vo.StorageCheckOrderVo"
            resultType="java.lang.Integer">
        select count(0)
        from (
                     (
                             (
                                     (
                                             (
                                                     (
                                                             (
                                                                     (
                                                                             storage_check_order_${storeId} as sco
                                                                                     left join procurement_result_order_${storeId} as pro on
                                                                                 pro.id = sco.order_id
                                                                             )
                                                                             left join sell_result_order_${storeId} as sro on
                                                                         sro.id = sco.order_id
                                                                     )
                                                                     left join storage_result_order_${storeId} as sro1 on
                                                                 sro1.id = sco.order_id
                                                             )
                                                             left join goods_sku_${storeId} as gs on gs.id =
                                                                                                     sco.goods_sku_id
                                                     )
                                                     left join goods_${storeId} as g on g.id = gs.goods_id
                                             )
                                             left join supplier_${storeId} as s on s.id = sco.target_id
                                     )
                                     left join client as c on c.id = sco.target_id
                             )
                             left join user_${storeId} as u on u.id = sco.user_id
                     )
                 left join warehouse_${storeId} as w on w.id = sco.warehouse_id
        where g.id = #{goodsId}
        order by sco.id asc;
    </select>

    <select id="findPagedOrderByGoodsId" resultType="com.yeta.pps.vo.StorageCheckOrderVo">
        select sco.order_id,
               if(
                   pro.type = 1,
                   '采购入库单',
                   if(
                       pro.type = 2,
                       '采购退货单',
                       if(
                           pro.type = 3,
                           '采购换货单',
                           if(
                               sro.type = 1,
                               '零售单',
                               if(
                                   sro.type = 2,
                                   '销售出库单',
                                   if(
                                       sro.type = 3,
                                       '销售退货单',
                                       if(
                                           sro.type = 4,
                                           '销售换货单',
                                           if(
                                               sro1.type = 1,
                                               '其他入库单',
                                               if(
                                                   sro1.type = 2,
                                                   '其他出库单',
                                                   if(
                                                       sro1.type = 3,
                                                       '报溢单',
                                                       if(
                                                           sro1.type = 4,
                                                           '报损单',
                                                           if(
                                                               sro1.type = 5,
                                                               '成本调价单',
                                                               null
                                                                   )))))))))))) as type_name,
               sco.create_time,
               if(
                   pro.apply_order_id is not null,
                   pro.apply_order_id,
                   if(
                       sro.apply_order_id is not null,
                       sro.apply_order_id,
                       null
                           ))                                                   as apply_order_id,
               if(
                   c.name is not null,
                   c.name,
                   s.name
                       )                                                        as target_name,
               gs.sku                                                           as sku,
               sco.warehouse_id,
               w.name                                                           as warehouse_name,
               sco.in_quantity,
               sco.in_money,
               sco.in_total_money,
               sco.out_quantity,
               sco.out_money,
               sco.out_total_money,
               sco.check_quantity2,
               sco.check_money2,
               sco.check_total_money2,
               u.name                                                           as user_name,
               if(
                   pro.remark is not null,
                   pro.remark,
                   if(
                       sro.remark is not null,
                       sro.remark,
                       if(
                           sro1.remark is not null,
                           sro1.remark,
                           null
                               )))                                              as remark
        from (
                     (
                             (
                                     (
                                             (
                                                     (
                                                             (
                                                                     (
                                                                             storage_check_order_${vo.storeId} as sco
                                                                                     left join procurement_result_order_${vo.storeId} as pro on
                                                                                 pro.id = sco.order_id
                                                                             )
                                                                             left join sell_result_order_${vo.storeId} as sro on
                                                                         sro.id = sco.order_id
                                                                     )
                                                                     left join storage_result_order_${vo.storeId} as sro1 on
                                                                 sro1.id = sco.order_id
                                                             )
                                                             left join goods_sku_${vo.storeId} as gs on gs.id =
                                                                                                        sco.goods_sku_id
                                                     )
                                                     left join goods_${vo.storeId} as g on g.id = gs.goods_id
                                             )
                                             left join supplier_${vo.storeId} as s on s.id = sco.target_id
                                     )
                                     left join client as c on c.id = sco.target_id
                             )
                             left join user_${vo.storeId} as u on u.id = sco.user_id
                     )
                 left join warehouse_${vo.storeId} as w on w.id = sco.warehouse_id
        where g.id = #{vo.goodsId}
        order by sco.id asc
        limit #{pageVo.start}, #{pageVo.pageSize};
    </select>

    <select id="findCountSkuByGoodsId" parameterType="com.yeta.pps.vo.GoodsWarehouseSkuVo"
            resultType="java.lang.Integer">
        select count(*)
        from (select count(*)
              from (
                           (
                                   (
                                           goods_${storeId} as g
                                                   inner join goods_sku_${storeId} as gs on g.id = gs.goods_id
                                           )
                                           inner join warehouse_goods_sku_${storeId} as wgs on gs.id = wgs.goods_sku_id
                                   )
                                   inner join warehouse_${storeId} as w on w.id = wgs.warehouse_id
                           )
                       inner join goods_type_${storeId} as gt on g.type_id = gt.id
              where g.id = #{id}
              group by gs.id) as temp;
    </select>

    <select id="findPagedSkuByGoodsId" resultType="com.yeta.pps.vo.GoodsWarehouseSkuVo">
        select g.id,
               g.name,
               g.bar_code,
               gs.sku,
               sum(wgs.real_inventory)        as real_inventory,
               sum(wgs.not_sent_quantity)     as not_sent_quantity,
               sum(wgs.not_received_quantity) as not_received_quantity,
               sum(wgs.can_use_inventory)     as can_use_inventory,
               sum(wgs.book_inventory)        as book_inventory
        from (
                     (
                             (
                                     goods_${vo.storeId} as g
                                             inner join goods_sku_${vo.storeId} as gs on g.id = gs.goods_id
                                     )
                                     inner join warehouse_goods_sku_${vo.storeId} as wgs on gs.id = wgs.goods_sku_id
                             )
                             inner join warehouse_${vo.storeId} as w on w.id = wgs.warehouse_id
                     )
                 inner join goods_type_${vo.storeId} as gt on g.type_id = gt.id
        where g.id = #{vo.id}
        group by gs.id
        limit #{pageVo.start}, #{pageVo.pageSize};
    </select>

    <select id="findCountBySku" parameterType="com.yeta.pps.vo.GoodsWarehouseSkuVo" resultType="java.lang.Integer">
        select
        count(*)
        from
        (
        select
        count(*)
        from
        (
        (
        (
        goods_${storeId} as g
        inner join goods_sku_${storeId} as gs on g.id = gs.goods_id
        )
        inner join warehouse_goods_sku_${storeId} as wgs on gs.id = wgs.goods_sku_id
        )
        inner join warehouse_${storeId} as w on w.id = wgs.warehouse_id
        )
        inner join goods_type_${storeId} as gt on g.type_id = gt.id
        <if test="id != null">
            and g.id like concat('%', #{id}, '%')
        </if>
        <if test="name != null">
            and g.name like concat('%', #{name}, '%')
        </if>
        <if test="typeId != null">
            and g.type_id = #{typeId}
        </if>
        group by gs.id
        ) as temp;
    </select>

    <select id="findPagedBySku" resultType="com.yeta.pps.vo.GoodsWarehouseSkuVo">
        select
        g.id,
        g.name,
        g.bar_code,
        gt.name as type_name,
        g.image,
        gs.id as goods_sku_id,
        gs.sku,
        sum(wgs.real_inventory) as real_inventory,
        sum(wgs.not_sent_quantity) as not_sent_quantity,
        sum(wgs.not_received_quantity) as not_received_quantitym,
        sum(wgs.can_use_inventory) as can_use_inventory,
        sum(wgs.book_inventory) as book_inventory,
        gs.retail_price,
        gs.vip_price
        from
        (
        (
        (
        goods_${vo.storeId} as g
        inner join goods_sku_${vo.storeId} as gs on g.id = gs.goods_id
        )
        inner join warehouse_goods_sku_${vo.storeId} as wgs on gs.id = wgs.goods_sku_id
        )
        inner join warehouse_${vo.storeId} as w on w.id = wgs.warehouse_id
        )
        inner join goods_type_${vo.storeId} as gt on g.type_id = gt.id
        <if test="vo.id != null">
            and g.id like concat('%', #{vo.id}, '%')
        </if>
        <if test="vo.name != null">
            and g.name like concat('%', #{vo.name}, '%')
        </if>
        <if test="vo.typeId != null">
            and g.type_id = #{vo.typeId}
        </if>
        group by gs.id
        limit #{pageVo.start}, #{pageVo.pageSize};
    </select>

    <select id="findCountDistributionByGoodsSkuId" parameterType="com.yeta.pps.vo.GoodsWarehouseSkuVo"
            resultType="java.lang.Integer">
        select count(*)
        from (
                     (
                             (
                                     goods_${storeId} as g
                                             inner join goods_sku_${storeId} as gs on g.id = gs.goods_id
                                     )
                                     inner join warehouse_goods_sku_${storeId} as wgs on gs.id = wgs.goods_sku_id
                             )
                             inner join warehouse_${storeId} as w on w.id = wgs.warehouse_id
                     )
                 inner join goods_type_${storeId} as gt on g.type_id = gt.id
        where gs.id = #{goodsSkuId};
    </select>

    <select id="findPagedDistributionByGoodsSkuId" resultType="com.yeta.pps.vo.GoodsWarehouseSkuVo">
        select g.id,
               g.name,
               g.bar_code,
               gs.id                     as goods_sku_id,
               gs.sku,
               w.id                      as warehouse_id,
               w.name                    as warehouse_name,
               wgs.real_inventory        as real_inventory,
               wgs.not_sent_quantity     as not_sent_quantity,
               wgs.not_received_quantity as not_received_quantity,
               wgs.can_use_inventory     as can_use_inventory,
               wgs.book_inventory        as book_inventory,
               gs.retail_price,
               gs.vip_price
        from (
                     (
                             (
                                     goods_${vo.storeId} as g
                                             inner join goods_sku_${vo.storeId} as gs on g.id = gs.goods_id
                                     )
                                     inner join warehouse_goods_sku_${vo.storeId} as wgs on gs.id = wgs.goods_sku_id
                             )
                             inner join warehouse_${vo.storeId} as w on w.id = wgs.warehouse_id
                     )
                 inner join goods_type_${vo.storeId} as gt on g.type_id = gt.id
        where gs.id = #{vo.goodsSkuId}
        limit #{pageVo.start}, #{pageVo.pageSize};
    </select>

    <select id="findCountOrderByGoodsSkuId" parameterType="com.yeta.pps.vo.StorageCheckOrderVo"
            resultType="java.lang.Integer">
        select
        count(0)
        from
        (
        (
        (
        (
        (
        (
        (
        (
        storage_check_order_${storeId} as sco
        left join procurement_result_order_${storeId} as pro on pro.id = sco.order_id
        )
        left join sell_result_order_${storeId} as sro on sro.id = sco.order_id
        )
        left join storage_result_order_${storeId} as sro1 on sro1.id = sco.order_id
        )
        left join goods_sku_${storeId} as gs on gs.id = sco.goods_sku_id
        )
        left join goods_${storeId} as g on g.id = gs.goods_id
        )
        left join supplier_${storeId} as s on s.id = sco.target_id
        )
        left join client as c on c.id = sco.target_id
        )
        left join user_${storeId} as u on u.id = sco.user_id
        )
        left join warehouse_${storeId} as w on w.id = sco.warehouse_id
        where gs.id = #{goodsSkuId}
        <if test="startTime != null and endTime != null">
            and date(sco.create_time) between #{startTime} and #{endTime}
        </if>
        order by sco.id asc;
    </select>

    <select id="findPagedOrderByGoodsSkuId" resultType="com.yeta.pps.vo.StorageCheckOrderVo">
        select
        sco.order_id,
        if (
        pro.type = 1,
        '采购入库单',
        if (
        pro.type = 2,
        '采购退货单',
        if (
        pro.type = 3,
        '采购换货单',
        if (
        sro.type = 1,
        '零售单',
        if (
        sro.type = 2,
        '销售出库单',
        if (
        sro.type = 3,
        '销售退货单',
        if (
        sro.type = 4,
        '销售换货单',
        if (
        sro1.type = 1,
        '其他入库单',
        if (
        sro1.type = 2,
        '其他出库单',
        if (
        sro1.type = 3,
        '报溢单',
        if (
        sro1.type = 4,
        '报损单',
        if (
        sro1.type = 5,
        '成本调价单',
        null
        )))))))))))) as type_name,
        sco.create_time,
        if (
        pro.apply_order_id is not null,
        pro.apply_order_id,
        if (
        sro.apply_order_id is not null,
        sro.apply_order_id,
        null
        )) as apply_order_id,
        if (
        c.name is not null,
        c.name,
        s.name
        ) as target_name,
        gs.sku as sku,
        sco.warehouse_id,
        w.name as warehouse_name,
        sco.in_quantity,
        sco.in_money,
        sco.in_total_money,
        sco.out_quantity,
        sco.out_money,
        sco.out_total_money,
        sco.check_quantity1,
        sco.check_money1,
        sco.check_total_money1,
        u.name as user_name,
        if (
        pro.remark is not null,
        pro.remark,
        if (
        sro.remark is not null,
        sro.remark,
        if (
        sro1.remark is not null,
        sro1.remark,
        null
        ))) as remark
        from
        (
        (
        (
        (
        (
        (
        (
        (
        storage_check_order_${vo.storeId} as sco
        left join procurement_result_order_${vo.storeId} as pro on pro.id = sco.order_id
        )
        left join sell_result_order_${vo.storeId} as sro on sro.id = sco.order_id
        )
        left join storage_result_order_${vo.storeId} as sro1 on sro1.id = sco.order_id
        )
        left join goods_sku_${vo.storeId} as gs on gs.id = sco.goods_sku_id
        )
        left join goods_${vo.storeId} as g on g.id = gs.goods_id
        )
        left join supplier_${vo.storeId} as s on s.id = sco.target_id
        )
        left join client as c on c.id = sco.target_id
        )
        left join user_${vo.storeId} as u on u.id = sco.user_id
        )
        left join warehouse_${vo.storeId} as w on w.id = sco.warehouse_id
        where gs.id = #{vo.goodsSkuId}
        <if test="vo.startTime != null and vo.endTime != null">
            and date(sco.create_time) between #{vo.startTime} and #{vo.endTime}
        </if>
        order by sco.id asc
        limit #{pageVo.start}, #{pageVo.pageSize};
    </select>

    <select id="findCountByWarehouse" parameterType="com.yeta.pps.vo.GoodsWarehouseSkuVo"
            resultType="java.lang.Integer">
        select
        count(*)
        from
        (
        (
        (
        goods_${storeId} as g
        inner join goods_sku_${storeId} as gs on g.id = gs.goods_id
        )
        inner join warehouse_goods_sku_${storeId} as wgs on gs.id = wgs.goods_sku_id
        )
        inner join warehouse_${storeId} as w on w.id = wgs.warehouse_id
        )
        inner join goods_type_${storeId} as gt on g.type_id = gt.id
        where 1 = 1
        <if test="id != null">
            and g.id like concat('%', #{id}, '%')
        </if>
        <if test="name != null">
            and g.name like concat('%', #{name}, '%')
        </if>
        <if test="typeId != null">
            and g.type_id = #{typeId}
        </if>
        <if test="warehouseId != null">
            and w.id = #{warehouseId}
        </if>
        <if test="flag == 2">
            and wgs.book_inventory &gt;= wgs.inventory_upper_limit or wgs.book_inventory &lt;= wgs.inventory_low_limit
        </if>
        <if test="flag == 3">
            and wgs.inventory_low_limit + wgs.not_sent_quantity - wgs.real_inventory - wgs.not_received_quantity &gt; 0
        </if>
    </select>

    <select id="findPagedByWarehouse" resultType="com.yeta.pps.vo.GoodsWarehouseSkuVo">
        select
        g.id,
        g.name,
        g.bar_code,
        gt.name as type_name,
        g.image,
        gs.id as goods_sku_id,
        gs.sku,
        gs.goods_id,
        gs.retail_price,
        gs.vip_price,
        w.id as warehouse_id,
        w.name as warehouse_name,
        wgs.real_inventory,
        wgs.not_sent_quantity,
        wgs.not_received_quantity,
        wgs.can_use_inventory,
        wgs.book_inventory,
        wgs.inventory_upper_limit,
        wgs.inventory_low_limit,
        if (wgs.book_inventory &gt;= wgs.inventory_upper_limit, '库存高于上限', if (wgs.book_inventory &lt;= wgs.inventory_low_limit, '库存低于下限', null)) as remark,
        wgs.inventory_low_limit + wgs.not_sent_quantity - wgs.real_inventory - wgs.not_received_quantity as need_quantity,
        wgs.opening_quantity,
        wgs.opening_money,
        wgs.opening_total_money
        from
        (
        (
        (
        goods_${vo.storeId} as g
        inner join goods_sku_${vo.storeId} as gs on g.id = gs.goods_id
        )
        inner join warehouse_goods_sku_${vo.storeId} as wgs on gs.id = wgs.goods_sku_id
        )
        inner join warehouse_${vo.storeId} as w on w.id = wgs.warehouse_id
        )
        inner join goods_type_${vo.storeId} as gt on g.type_id = gt.id
        where 1 = 1
        <if test="vo.id != null">
            and g.id like concat('%', #{vo.id}, '%')
        </if>
        <if test="vo.name != null">
            and g.name like concat('%', #{vo.name}, '%')
        </if>
        <if test="vo.typeId != null">
            and g.type_id = #{vo.typeId}
        </if>
        <if test="vo.warehouseId != null">
            and w.id = #{vo.warehouseId}
        </if>
        <if test="vo.flag == 2">
            and wgs.book_inventory &gt;= wgs.inventory_upper_limit or wgs.book_inventory &lt;= wgs.inventory_low_limit
        </if>
        <if test="vo.flag == 3">
            and wgs.inventory_low_limit + wgs.not_sent_quantity - wgs.real_inventory - wgs.not_received_quantity &gt; 0
        </if>
        limit #{pageVo.start}, #{pageVo.pageSize};
    </select>

    <select id="findCountOrderByGoodsSkuIdAndWarehouseId" parameterType="com.yeta.pps.vo.StorageCheckOrderVo"
            resultType="java.lang.Integer">
        select
        count(0)
        from
        (
        (
        (
        (
        (
        (
        (
        (
        storage_check_order_${storeId} as sco
        left join procurement_result_order_${storeId} as pro on pro.id = sco.order_id
        )
        left join sell_result_order_${storeId} as sro on sro.id = sco.order_id
        )
        left join storage_result_order_${storeId} as sro1 on sro1.id = sco.order_id
        )
        left join goods_sku_${storeId} as gs on gs.id = sco.goods_sku_id
        )
        left join goods_${storeId} as g on g.id = gs.goods_id
        )
        left join supplier_${storeId} as s on s.id = sco.target_id
        )
        left join client as c on c.id = sco.target_id
        )
        left join user_${storeId} as u on u.id = sco.user_id
        )
        left join warehouse_${storeId} as w on w.id = sco.warehouse_id
        where gs.id = #{goodsSkuId}
        and w.id = #{warehouseId}
        <if test="startTime != null and endTime != null">
            and date(sco.create_time) between #{startTime} and #{endTime}
        </if>
        order by sco.id asc;
    </select>

    <select id="findPagedOrderByGoodsSkuIdAndWarehouseId" resultType="com.yeta.pps.vo.StorageCheckOrderVo">
        select
        sco.order_id,
        if (
        pro.type = 1,
        '采购入库单',
        if (
        pro.type = 2,
        '采购退货单',
        if (
        pro.type = 3,
        '采购换货单',
        if (
        sro.type = 1,
        '零售单',
        if (
        sro.type = 2,
        '销售出库单',
        if (
        sro.type = 3,
        '销售退货单',
        if (
        sro.type = 4,
        '销售换货单',
        if (
        sro1.type = 1,
        '其他入库单',
        if (
        sro1.type = 2,
        '其他出库单',
        if (
        sro1.type = 3,
        '报溢单',
        if (
        sro1.type = 4,
        '报损单',
        if (
        sro1.type = 5,
        '成本调价单',
        null
        )))))))))))) as type_name,
        sco.create_time,
        if (
        pro.apply_order_id is not null,
        pro.apply_order_id,
        if (
        sro.apply_order_id is not null,
        sro.apply_order_id,
        null
        )) as apply_order_id,
        if (
        c.name is not null,
        c.name,
        s.name
        ) as target_name,
        gs.sku as sku,
        sco.warehouse_id,
        w.name as warehouse_name,
        sco.in_quantity,
        sco.in_money,
        sco.in_total_money,
        sco.out_quantity,
        sco.out_money,
        sco.out_total_money,
        sco.check_quantity,
        sco.check_money,
        sco.check_total_money,
        u.name as user_name,
        if (
        pro.remark is not null,
        pro.remark,
        if (
        sro.remark is not null,
        sro.remark,
        if (
        sro1.remark is not null,
        sro1.remark,
        null
        ))) as remark
        from
        (
        (
        (
        (
        (
        (
        (
        (
        storage_check_order_${vo.storeId} as sco
        left join procurement_result_order_${vo.storeId} as pro on pro.id = sco.order_id
        )
        left join sell_result_order_${vo.storeId} as sro on sro.id = sco.order_id
        )
        left join storage_result_order_${vo.storeId} as sro1 on sro1.id = sco.order_id
        )
        left join goods_sku_${vo.storeId} as gs on gs.id = sco.goods_sku_id
        )
        left join goods_${vo.storeId} as g on g.id = gs.goods_id
        )
        left join supplier_${vo.storeId} as s on s.id = sco.target_id
        )
        left join client as c on c.id = sco.target_id
        )
        left join user_${vo.storeId} as u on u.id = sco.user_id
        )
        left join warehouse_${vo.storeId} as w on w.id = sco.warehouse_id
        where gs.id = #{vo.goodsSkuId}
        and w.id = #{vo.warehouseId}
        <if test="vo.startTime != null and vo.endTime != null">
            and date(sco.create_time) between #{vo.startTime} and #{vo.endTime}
        </if>
        order by sco.id asc
        limit #{pageVo.start}, #{pageVo.pageSize};
    </select>

    <!--库存对账-->

    <insert id="addStorageCheckOrder" parameterType="com.yeta.pps.vo.StorageCheckOrderVo">
        insert into storage_check_order_${storeId} (order_id,
                                                    create_time,
                                                    order_status,
                                                    target_id,
                                                    goods_id,
                                                    goods_sku_id,
                                                    warehouse_id,
                                                    in_quantity,
                                                    in_money,
                                                    in_total_money,
                                                    out_quantity,
                                                    out_money,
                                                    out_total_money,
                                                    check_quantity,
                                                    check_money,
                                                    check_total_money,
                                                    check_quantity1,
                                                    check_money1,
                                                    check_total_money1,
                                                    check_quantity2,
                                                    check_money2,
                                                    check_total_money2,
                                                    user_id)
        values (#{orderId},
                #{createTime},
                #{orderStatus},
                #{targetId},
                #{goodsId},
                #{goodsSkuId},
                #{warehouseId},
                #{inQuantity},
                #{inMoney},
                #{inTotalMoney},
                #{outQuantity},
                #{outMoney},
                #{outTotalMoney},
                #{checkQuantity},
                #{checkMoney},
                #{checkTotalMoney},
                #{checkQuantity1},
                #{checkMoney1},
                #{checkTotalMoney1},
                #{checkQuantity2},
                #{checkMoney2},
                #{checkTotalMoney2},
                #{userId});
    </insert>

    <update id="redDashedInStorageCheckOrder" parameterType="com.yeta.pps.vo.StorageCheckOrderVo">
        update
                storage_check_order_${storeId}
        set order_status = -1
        where order_id = #{orderId}
          and goods_sku_id = #{goodsSkuId}
          and warehouse_id = #{warehouseId}
          and order_status &gt; 0
          and in_total_money != 0;
    </update>

    <update id="redDashedOutStorageCheckOrder" parameterType="com.yeta.pps.vo.StorageCheckOrderVo">
        update
                storage_check_order_${storeId}
        set order_status = -1
        where order_id = #{orderId}
          and goods_sku_id = #{goodsSkuId}
          and warehouse_id = #{warehouseId}
          and order_status &gt; 0
          and out_total_money != 0;
    </update>

    <select id="findInStorageCheckOrder" parameterType="com.yeta.pps.vo.StorageCheckOrderVo"
            resultType="com.yeta.pps.vo.StorageCheckOrderVo">
        select id,
               order_id,
               create_time,
               order_status,
               target_id,
               goods_id,
               goods_sku_id,
               warehouse_id,
               in_quantity,
               in_money,
               in_total_money,
               out_quantity,
               out_money,
               out_total_money,
               check_quantity,
               check_money,
               check_total_money,
               check_quantity1,
               check_money1,
               check_total_money1,
               check_quantity2,
               check_money2,
               check_total_money2,
               user_id
        from storage_check_order_${storeId}
        where order_id = #{orderId}
          and goods_sku_id = #{goodsSkuId}
          and warehouse_id = #{warehouseId}
          and in_total_money != 0;
    </select>

    <select id="findOutStorageCheckOrder" parameterType="com.yeta.pps.vo.StorageCheckOrderVo"
            resultType="com.yeta.pps.vo.StorageCheckOrderVo">
        select id,
               order_id,
               create_time,
               order_status,
               target_id,
               goods_id,
               goods_sku_id,
               warehouse_id,
               in_quantity,
               in_money,
               in_total_money,
               out_quantity,
               out_money,
               out_total_money,
               check_quantity,
               check_money,
               check_total_money,
               check_quantity1,
               check_money1,
               check_total_money1,
               check_quantity2,
               check_money2,
               check_total_money2,
               user_id
        from storage_check_order_${storeId}
        where order_id = #{orderId}
          and goods_sku_id = #{goodsSkuId}
          and warehouse_id = #{warehouseId}
          and out_total_money != 0;
    </select>

    <select id="findLastCheckMoneyByGoodsSkuIdAndWarehouseId" parameterType="com.yeta.pps.vo.StorageCheckOrderVo"
            resultType="com.yeta.pps.vo.StorageCheckOrderVo">
        select id,
               order_id,
               create_time,
               order_status,
               target_id,
               goods_id,
               goods_sku_id,
               warehouse_id,
               in_quantity,
               in_money,
               in_total_money,
               out_quantity,
               out_money,
               out_total_money,
               check_quantity,
               check_money,
               check_total_money,
               check_quantity1,
               check_money1,
               check_total_money1,
               check_quantity2,
               check_money2,
               check_total_money2,
               user_id
        from storage_check_order_${storeId}
        where goods_sku_id = #{goodsSkuId}
          and warehouse_id = #{warehouseId}
        order by id desc
        limit 1;
    </select>

    <select id="findLastCheckMoneyByGoodsSkuId" parameterType="com.yeta.pps.vo.StorageCheckOrderVo"
            resultType="com.yeta.pps.vo.StorageCheckOrderVo">
        select id,
               order_id,
               create_time,
               order_status,
               target_id,
               goods_id,
               goods_sku_id,
               warehouse_id,
               in_quantity,
               in_money,
               in_total_money,
               out_quantity,
               out_money,
               out_total_money,
               check_quantity,
               check_money,
               check_total_money,
               check_quantity1,
               check_money1,
               check_total_money1,
               check_quantity2,
               check_money2,
               check_total_money2,
               user_id
        from storage_check_order_${storeId}
        where goods_sku_id = #{goodsSkuId}
        order by id desc
        limit 1;
    </select>

    <select id="findLastCheckMoneyByGoodsId" parameterType="com.yeta.pps.vo.StorageCheckOrderVo"
            resultType="com.yeta.pps.vo.StorageCheckOrderVo">
        select id,
               order_id,
               create_time,
               order_status,
               target_id,
               goods_id,
               goods_sku_id,
               warehouse_id,
               in_quantity,
               in_money,
               in_total_money,
               out_quantity,
               out_money,
               out_total_money,
               check_quantity,
               check_money,
               check_total_money,
               check_quantity1,
               check_money1,
               check_total_money1,
               check_quantity2,
               check_money2,
               check_total_money2,
               user_id
        from storage_check_order_${storeId}
        where goods_id = #{goodsId}
        order by id desc
        limit 1;
    </select>

    <select id="findAllStorageCheckOrder" parameterType="com.yeta.pps.vo.StorageCheckOrderVo"
            resultType="com.yeta.pps.vo.StorageCheckOrderVo">
        select
        id, order_id, create_time, order_status, target_id, goods_id, goods_sku_id, warehouse_id, in_quantity, in_money,
        in_total_money, out_quantity, out_money, out_total_money, check_quantity, check_money, check_total_money,
        check_quantity1, check_money1, check_total_money1, check_quantity2, check_money2, check_total_money2, user_id
        from
        storage_check_order_${storeId}
        where
        1 = 1
        <if test="targetId != null">
            and target_id = #{targetId};
        </if>
        <if test="warehouseId != null">
            and warehouse_id = #{warehouseId};
        </if>
    </select>
</mapper>