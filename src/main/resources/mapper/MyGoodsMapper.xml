<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yeta.pps.mapper.MyGoodsMapper" >

    <insert id="addBrand" parameterType="com.yeta.pps.vo.GoodsBrandVo" useGeneratedKeys="true" keyProperty="id">
        insert into goods_brand_${storeId} (name) values (#{name});
    </insert>

    <delete id="deleteBrand" parameterType="com.yeta.pps.vo.GoodsBrandVo">
        delete from goods_brand_${storeId} where id = #{id};
    </delete>

    <update id="updateBrand" parameterType="com.yeta.pps.vo.GoodsBrandVo">
        update goods_brand_${storeId} set name = #{name} where id = #{id};
    </update>

    <select id="findCountBrand" parameterType="com.yeta.pps.vo.GoodsBrandVo" resultType="java.lang.Integer">
        select count(0) from goods_brand_${storeId};
    </select>

    <select id="findAllBrand" parameterType="com.yeta.pps.vo.GoodsBrandVo" resultType="com.yeta.pps.po.GoodsBrand">
        select id, name from goods_brand_${storeId};
    </select>

    <select id="findAllPagedBrand" resultType="com.yeta.pps.po.GoodsBrand">
        select id, name from goods_brand_${goodsBrandVo.storeId} limit #{pageVo.start}, #{pageVo.pageSize};
    </select>

    <select id="findBrandById" parameterType="com.yeta.pps.vo.GoodsBrandVo" resultType="com.yeta.pps.po.GoodsBrand">
        select id, name from goods_brand_${storeId} where id = #{id};
    </select>

    <!---->

    <insert id="addLabel" parameterType="com.yeta.pps.vo.GoodsLabelVo" useGeneratedKeys="true" keyProperty="id">
        insert into goods_label_${storeId} (name) values (#{name});
    </insert>

    <delete id="deleteLabel" parameterType="com.yeta.pps.vo.GoodsLabelVo">
        delete from goods_label_${storeId} where id = #{id};
    </delete>

    <update id="updateLabel" parameterType="com.yeta.pps.vo.GoodsLabelVo">
        update goods_label_${storeId} set name = #{name} where id = #{id};
    </update>

    <select id="findCountLabel" parameterType="com.yeta.pps.vo.GoodsLabelVo" resultType="java.lang.Integer">
        select count(0) from goods_label_${storeId};
    </select>

    <select id="findAllLabel" parameterType="com.yeta.pps.vo.GoodsLabelVo" resultType="com.yeta.pps.po.GoodsLabel">
        select id, name from goods_label_${storeId};
    </select>

    <select id="findAllPagedLabel" resultType="com.yeta.pps.po.GoodsLabel">
        select id, name from goods_label_${goodsLabelVo.storeId} limit #{pageVo.start}, #{pageVo.pageSize};
    </select>

    <select id="findLabelById" parameterType="com.yeta.pps.vo.GoodsLabelVo" resultType="com.yeta.pps.po.GoodsLabel">
        select id, name from goods_label_${storeId} where id = #{id};
    </select>

    <!---->

    <insert id="addType" parameterType="com.yeta.pps.vo.GoodsTypeVo" useGeneratedKeys="true" keyProperty="id">
        insert into goods_type_${storeId} (name) values (#{name});
    </insert>

    <delete id="deleteType" parameterType="com.yeta.pps.vo.GoodsTypeVo">
        delete from goods_type_${storeId} where id = #{id};
    </delete>

    <update id="updateType" parameterType="com.yeta.pps.vo.GoodsTypeVo">
        update goods_type_${storeId} set name = #{name} where id = #{id};
    </update>

    <select id="findCountType" parameterType="com.yeta.pps.vo.GoodsTypeVo" resultType="java.lang.Integer">
        select count(0) from goods_type_${storeId};
    </select>

    <select id="findAllType" parameterType="com.yeta.pps.vo.GoodsTypeVo" resultType="com.yeta.pps.po.GoodsType">
        select id, name from goods_type_${storeId};
    </select>

    <select id="findAllPagedType" resultType="com.yeta.pps.po.GoodsType">
        select id, name from goods_type_${goodsTypeVo.storeId} limit #{pageVo.start}, #{pageVo.pageSize};
    </select>

    <select id="findTypeById" parameterType="com.yeta.pps.vo.GoodsTypeVo" resultType="com.yeta.pps.po.GoodsType">
        select id, name from goods_type_${storeId} where id = #{id};
    </select>

    <!---->

    <insert id="addUnit" parameterType="com.yeta.pps.vo.GoodsUnitVo" useGeneratedKeys="true" keyProperty="id">
        insert into goods_unit_${storeId} (name) values (#{name});
    </insert>

    <delete id="deleteUnit" parameterType="com.yeta.pps.vo.GoodsUnitVo">
        delete from goods_unit_${storeId} where id = #{id};
    </delete>

    <update id="updateUnit" parameterType="com.yeta.pps.vo.GoodsUnitVo">
        update goods_unit_${storeId} set name = #{name} where id = #{id};
    </update>

    <select id="findCountUnit" parameterType="com.yeta.pps.vo.GoodsUnitVo" resultType="java.lang.Integer">
        select count(0) from goods_unit_${storeId};
    </select>

    <select id="findAllUnit" parameterType="com.yeta.pps.vo.GoodsUnitVo" resultType="com.yeta.pps.po.GoodsUnit">
        select id, name from goods_unit_${storeId};
    </select>

    <select id="findAllPagedUnit" resultType="com.yeta.pps.po.GoodsUnit">
        select id, name from goods_unit_${goodsUnitVo.storeId} limit #{pageVo.start}, #{pageVo.pageSize};
    </select>

    <select id="findUnitById" parameterType="com.yeta.pps.vo.GoodsUnitVo" resultType="com.yeta.pps.po.GoodsUnit">
        select id, name from goods_unit_${storeId} where id = #{id};
    </select>

    <!---->

    <insert id="add" parameterType="com.yeta.pps.vo.GoodsVo">
        insert into goods_${storeId}
            (id, name, code, bar_code, type_id, brand_id, unit_id, label_id, retail_price, purchase_price, vip_price, inventory, origin, image, oder_type, degree, net_content, integral, remark, putaway)
        VALUES
            (#{id}, #{name}, #{code}, #{barCode}, #{typeId}, #{brandId}, #{unitId}, #{labelId}, #{retailPrice}, #{purchasePrice}, #{vipPrice}, #{inventory}, #{origin}, #{image}, #{oderType}, #{degree}, #{netContent}, #{integral}, #{remark}, #{putaway});
    </insert>

    <delete id="delete" parameterType="com.yeta.pps.vo.GoodsVo">
        delete from goods_${storeId} where id = #{id};
    </delete>

    <update id="update" parameterType="com.yeta.pps.vo.GoodsVo">
        update
            goods_${storeId}
        set
            name = #{name}, code = #{name}, bar_code = #{barCode}, type_id = #{typeId}, brand_id = #{brandId}, unit_id = #{unitId}, label_id = #{labelId}, retail_price = #{retailPrice}, purchase_price = #{purchasePrice}, vip_price = #{vipPrice}, inventory = #{inventory}, origin = #{origin}, image = #{image}, oder_type = #{oderType}, degree = #{degree}, net_content = #{netContent}, integral = #{integral}, remark = #{remark}, putaway = #{putaway}
        where
            id = #{id};
    </update>

    <select id="findCount" parameterType="com.yeta.pps.vo.GoodsVo" resultType="java.lang.Integer">
        select
            count(0)
        from
            goods_${storeId} as g,
            goods_brand_${storeId} as gb,
            goods_label_${storeId} as gl,
            goods_type_${storeId} as gt,
            goods_unit_${storeId} as gu
        where
            g.brand_id = gb.id
        and g.label_id = gl.id
        and g.type_id = gt.id
        and g.unit_id = gu.id;
    </select>

    <select id="findAllPaged" resultType="com.yeta.pps.vo.GoodsVo">
        select
            g.id,
            g.name,
            g.code,
            g.bar_code,
            g.retail_price,
            g.purchase_price,
            g.vip_price,
            g.inventory,
            g.origin,
            g.image,
            g.oder_type,
            g.degree,
            g.net_content,
            g.integral,
            g.remark,
            g.putaway,
            gb.id as brand_id,
            gb.name as brand_name,
            gl.id label_id,
            gl.name as label_name,
            gt.id as type_id,
            gt.name as type_name,
            gu.id as unit_id,
            gu.name as unit_name
        from
            goods_${goodsVo.storeId} as g,
            goods_brand_${goodsVo.storeId} as gb,
            goods_label_${goodsVo.storeId} as gl,
            goods_type_${goodsVo.storeId} as gt,
            goods_unit_${goodsVo.storeId} as gu
        where
            g.brand_id = gb.id
        and g.label_id = gl.id
        and g.type_id = gt.id
        and g.unit_id = gu.id
        <if test="goodsVo.typeId!=null">
            and g.type_id = #{goodsVo.typeId}
        </if>
        <if test="goodsVo.brandId!=null">
            and g.brand_id = #{goodsVo.brandId}
        </if>
        <if test="goodsVo.code!=null">
            and g.code = #{goodsVo.code}
        </if>
        <if test="goodsVo.barCode!=null">
            and g.bar_code = #{goodsVo.barCode}
        </if>
        <if test="goodsVo.putaway!=null">
            and g.putaway = #{goodsVo.putaway}
        </if>
        limit
            #{pageVo.start}, #{pageVo.pageSize};
    </select>

    <select id="findById" parameterType="com.yeta.pps.vo.GoodsVo" resultType="com.yeta.pps.vo.GoodsVo">
        select
            g.id,
            g.name,
            g.code,
            g.bar_code,
            g.retail_price,
            g.purchase_price,
            g.vip_price,
            g.inventory,
            g.origin,
            g.image,
            g.oder_type,
            g.degree,
            g.net_content,
            g.integral,
            g.remark,
            g.putaway,
            gb.id as brand_id,
            gb.name as brand_name,
            gl.id label_id,
            gl.name as label_name,
            gt.id as type_id,
            gt.name as type_name,
            gu.id as unit_id,
            gu.name as unit_name
        from
            goods_${storeId} as g,
            goods_brand_${storeId} as gb,
            goods_label_${storeId} as gl,
            goods_type_${storeId} as gt,
            goods_unit_${storeId} as gu
        where
            g.brand_id = gb.id
        and g.label_id = gl.id
        and g.type_id = gt.id
        and g.unit_id = gu.id
        and g.id = #{id};
    </select>

    <select id="findBrandLabelTypeUnit" parameterType="com.yeta.pps.vo.GoodsVo" resultType="com.yeta.pps.vo.GoodsVo">
        select
            id,
            name,
            code,
            bar_code,
            retail_price,
            purchase_price,
            vip_price,
            inventory,
            origin,
            image,
            oder_type,
            degree,
            net_content,
            integral,
            remark,
            putaway,
            brand_id,
            label_id,,
            type_id,
            unit_id
        from
            goods_${storeId}
        where
            1 = 1
        <if test="typeId != null">
        and
            g.type_id = #{typeId}
        </if>
        <if test="brandId != null">
        and
            g.brand_id = #{brandId}
        </if>
        <if test="labelId != null">
            and
            g.brand_id = #{labelId}
        </if>
        <if test="unitId != null">
            and
            g.unit_id = #{unitId}
        </if>
    </select>

</mapper>