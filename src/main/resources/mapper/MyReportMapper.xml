<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yeta.pps.mapper.MyReportMapper" >

    <!--库存报表-->

    <select id="findCountGoods" parameterType="com.yeta.pps.vo.ReportInventoryVo" resultType="java.lang.Integer">
        select
            count(0)
        from
            (
                select
                    count(0)
                from
                    (
                        (
                            (
                                goods_${storeId} as g
                                inner join goods_type_${storeId} as gt on gt.id = g.type_id
                            )
                            inner join goods_sku_${storeId} as gs on gs.goods_id = g.id
                        )
                        inner join warehouse_goods_sku_${storeId} as wgs on wgs.goods_sku_id = gs.id
                    )
                inner join warehouse_${storeId} as w on w.id = wgs.warehouse_id
                where
                    wgs.opening_money > 0
                <if test="id != null">
                    and g.id = #{id}
                </if>
                <if test="name != null">
                    and g.name like concat('%', #{name}, '%')
                </if>
                <if test="barCode != null">
                    and g.bar_code = #{barCode}
                </if>
                <if test="typeId != null">
                    and g.type_id = #{typeId}
                </if>
                group by g.id
            ) as temp;
    </select>

    <select id="findPagedGoods" resultType="com.yeta.pps.vo.ReportInventoryVo">
        select
            g.id,
            g.name,
            g.bar_code,
            g.type_id,
            gt.name as type_name,
            g.image
        from
            (
                (
                    (
                        goods_${vo.storeId} as g
                        inner join goods_type_${vo.storeId} as gt on gt.id = g.type_id
                    )
                    inner join goods_sku_${vo.storeId} as gs on gs.goods_id = g.id
                )
                inner join warehouse_goods_sku_${vo.storeId} as wgs on wgs.goods_sku_id = gs.id
            )
        inner join warehouse_${vo.storeId} as w on w.id = wgs.warehouse_id
        where
            wgs.opening_money > 0
        <if test="vo.id != null">
            and g.id = #{vo.id}
        </if>
        <if test="vo.name != null">
            and g.name like concat('%', #{vo.name}, '%')
        </if>
        <if test="vo.barCode != null">
            and g.bar_code = #{vo.barCode}
        </if>
        <if test="vo.typeId != null">
            and g.type_id = #{vo.typeId}
        </if>
        group by
            g.id
        limit
            #{pageVo.start}, #{pageVo.pageSize};
    </select>

    <select id="findCountGoodsWarehouse" parameterType="com.yeta.pps.vo.ReportInventoryVo" resultType="java.lang.Integer">
        select
            count(
                distinct g.id,
                g.name,
                g.bar_code,
                g.type_id,
                gt.name,
                g.image,
                wgs.warehouse_id,
                w.name
            )
        from
            (
                (
                    (
                        goods_${storeId} as g
                        inner join goods_type_${storeId} as gt on gt.id = g.type_id
                    )
                    inner join goods_sku_${storeId} as gs on gs.goods_id = g.id
                )
                inner join warehouse_goods_sku_${storeId} as wgs on wgs.goods_sku_id = gs.id
            )
        inner join warehouse_${storeId} as w on w.id = wgs.warehouse_id
        where
            wgs.opening_money > 0
        <if test="id != null">
            and g.id = #{id}
        </if>
        <if test="name != null">
            and g.name like concat('%', #{name}, '%')
        </if>
        <if test="barCode != null">
            and g.bar_code = #{barCode}
        </if>
        <if test="typeId != null">
            and g.type_id = #{typeId}
        </if>
    </select>

    <select id="findPagedGoodsWarehouse" resultType="com.yeta.pps.vo.ReportInventoryVo">
        select distinct
            g.id,
            g.name,
            g.bar_code,
            g.type_id,
            gt.name as type_name,
            g.image,
            wgs.warehouse_id,
            w.name as warehouse_name
        from 
            (
                (
                    (
                        goods_${vo.storeId} as g
                        inner join goods_type_${vo.storeId} as gt on gt.id = g.type_id
                    )
                    inner join goods_sku_${vo.storeId} as gs on gs.goods_id = g.id
                )
                inner join warehouse_goods_sku_${vo.storeId} as wgs on wgs.goods_sku_id = gs.id
            )
        inner join warehouse_${vo.storeId} as w on w.id = wgs.warehouse_id
        where
            wgs.opening_money > 0
        <if test="vo.id != null">
            and g.id = #{vo.id}
        </if>
        <if test="vo.name != null">
            and g.name like concat('%', #{vo.name}, '%')
        </if>
        <if test="vo.barCode != null">
            and g.bar_code = #{vo.barCode}
        </if>
        <if test="vo.typeId != null">
            and g.type_id = #{vo.typeId}
        </if>
        limit
            #{pageVo.start}, #{pageVo.pageSize};
    </select>

    <select id="findProcurementIn" parameterType="com.yeta.pps.vo.ReportInventoryVo" resultType="com.yeta.pps.vo.ReportInventoryVo">
        select 
            sum(sco.in_quantity) - sum(sco.out_quantity) as procurement_in_quantity,
            sum(sco.in_total_money) - sum(sco.out_total_money) as procurement_in_money
        from 
            storage_check_order_${storeId} as sco
        inner join procurement_result_order_${storeId} as pro on pro.id = sco.order_id
        where
            date(sco.create_time) between #{startTime} and #{endTime}
        and sco.goods_id = #{id}
        <if test="warehouseId != null">
            and sco.warehouse_id = #{warehouseId}
        </if>
    </select>

    <select id="findOtherIn" parameterType="com.yeta.pps.vo.ReportInventoryVo" resultType="com.yeta.pps.vo.ReportInventoryVo">
        select
            sum(sco.in_quantity) - sum(sco.out_quantity) as other_in_quantity,
            sum(sco.in_total_money) - sum(sco.out_total_money) as other_in_money
        from
            storage_check_order_${storeId} as sco
        left join storage_result_order_${storeId} as sro on sro.id = sco.order_id
        where
            date(sco.create_time) between #{startTime} and #{endTime}
        and sco.goods_id = #{id}
        and
        (
            sro.type in (1, 3, 5)
            and sco.in_total_money != 0
            or sco.order_id = '期初调整'
        )
        <if test="warehouseId != null">
            and sco.warehouse_id = #{warehouseId}
        </if>
    </select>

    <select id="findSellOut" parameterType="com.yeta.pps.vo.ReportInventoryVo" resultType="com.yeta.pps.vo.ReportInventoryVo">
        select
            sum(sco.out_quantity) - sum(sco.in_quantity) as sell_out_quantity,
            sum(sco.out_total_money) - sum(sco.in_total_money) as sell_out_money
        from
            storage_check_order_${storeId} as sco
        inner join sell_result_order_${storeId} as sro on sro.id = sco.order_id
        where
            date(sco.create_time) between #{startTime} and #{endTime}
        and sco.goods_id = #{id}
        <if test="warehouseId != null">
            and sco.warehouse_id = #{warehouseId}
        </if>
    </select>

    <select id="findOtherOut" parameterType="com.yeta.pps.vo.ReportInventoryVo" resultType="com.yeta.pps.vo.ReportInventoryVo">
        select
            sum(sco.out_quantity) - sum(sco.in_quantity) as other_out_quantity,
            sum(sco.out_total_money) - sum(sco.in_total_money) as other_out_money
        from
            storage_check_order_${storeId} as sco
        left join storage_result_order_${storeId} as sro on sro.id = sco.order_id
        where
            date(sco.create_time) between #{startTime} and #{endTime}
        and sco.goods_id = #{id}
        and sro.type in (2, 4, 5)
        and sco.out_total_money != 0
        <if test="warehouseId != null">
            and sco.warehouse_id = #{warehouseId}
        </if>
    </select>

    <select id="findBeforeOrEnding" parameterType="com.yeta.pps.vo.StorageCheckOrderVo" resultType="com.yeta.pps.vo.StorageCheckOrderVo">
        select
            id, order_id, create_time, order_status, target_id, goods_id, goods_sku_id, warehouse_id, in_quantity, in_money, in_total_money, out_quantity, out_money, out_total_money, check_quantity, check_money, check_total_money, check_quantity1, check_money1, check_total_money1, check_quantity2, check_money2, check_total_money2, user_id
        from
            storage_check_order_${storeId} as sco
        where
            1 = 1
        <if test="goodsId != null">
            and sco.goods_id = #{goodsId}
        </if>
        <if test="goodsSkuId != null">
            and sco.goods_sku_id = #{goodsSkuId}
        </if>
        <if test="warehouseId != null">
            and sco.warehouse_id = #{warehouseId}
        </if>
        <if test="flag == 1">
            and date(sco.create_time) &lt; #{startTime}
            order by sco.create_time desc
        </if>
        <if test="flag == 2">
            and date(sco.create_time) &lt;= #{endTime}
            order by sco.create_time desc
        </if>
        limit 1;
    </select>

    <select id="findAnalysis" parameterType="com.yeta.pps.vo.ReportInventoryVo" resultType="com.yeta.pps.vo.ReportInventoryVo">
        select
            if (sum(sco.in_quantity) is null, 0, sum(sco.in_quantity)) as total_in_quantity,
            if (sum(sco.in_total_money) is null, 0, sum(sco.in_total_money)) as total_in_money,
            if (sum(sco.out_quantity) is null, 0 , sum(sco.out_quantity)) as total_out_quantity,
            if (sum(sco.out_total_money) is null, 0, sum(sco.out_total_money)) as total_out_money
        from
            storage_check_order_${storeId} as sco
        inner join storage_result_order_${storeId} as sro on sro.id = sco.order_id
        where
            date(sco.create_time) between #{startTime} and #{endTime}
        and sco.goods_id = #{id}
        <if test="flag == 1">
            and sro.type in (1, 2);
        </if>
        <if test="flag == 2">
            and sro.type in (3, 4);
        </if>
    </select>

    <select id="findCountDetails" parameterType="com.yeta.pps.vo.ReportInventoryVo" resultType="java.lang.Integer">
        select
            count(0)
        from
            (
                (
                    (
                        (
                            (
                                (
                                    (
                                        (
                                            storage_check_order_${storeId} as sco
                                            left join procurement_result_order_${storeId} as pro on pro.id = sco.order_id
                                        )
                                        left join sell_result_order_${storeId} as sro on sro.id = sco.order_id
                                    )
                                    left join storage_result_order_${storeId} as sro1 on sro1.id = sco.order_id
                                )
                                left join goods_sku_${storeId} as gs on gs.id = sco.goods_sku_id
                            )
                            left join goods_${storeId} as g on g.id = gs.goods_id
                        )
                        left join supplier_${storeId} as s on s.id = sco.target_id
                    )
                    left join client as c on c.id = sco.target_id
                )
                left join user_${storeId} as u on u.id = sco.user_id
            )
        left join warehouse_${storeId} as w on w.id = sco.warehouse_id
        where
            date(sco.create_time) between #{startTime} and #{endTime}
        <if test="id != null">
            and g.id = #{id}
        </if>
        <if test="name != null">
            and g.name like concat('%', #{name}, '%')
        </if>
        <if test="barCode != null">
            and g.bar_code = #{barCode}
        </if>
        <if test="typeId != null">
            and g.type_id = #{typeId}
        </if>
        order by
            sco.create_time asc;
    </select>

    <select id="findPagedDetails" resultType="com.yeta.pps.vo.StorageCheckOrderVo">
        select
            sco.order_id,
            if (
            pro.type = 1,
            '采购入库单',
            if (
            pro.type = 2,
            '采购退货单',
            if (
            pro.type = 3,
            '采购换货单',
            if (
            sro.type = 1,
            '零售单',
            if (
            sro.type = 2,
            '销售出库单',
            if (
            sro.type = 3,
            '销售退货单',
            if (
            sro.type = 4,
            '销售换货单',
            if (
            sro1.type = 1,
            '其他入库单',
            if (
            sro1.type = 2,
            '其他出库单',
            if (
            sro1.type = 3,
            '报溢单',
            if (
            sro1.type = 4,
            '报损单',
            if (
            sro1.type = 5,
            '成本调价单',
            null
            )))))))))))) as type_name,
            sco.create_time,
            if (
            pro.apply_order_id is not null,
            pro.apply_order_id,
            if (
            sro.apply_order_id is not null,
            sro.apply_order_id,
            null
            )) as apply_order_id,
            if (
            c.name is not null,
            c.name,
            s.name
            ) as target_name,
            gs.sku as sku,
            sco.warehouse_id,
            w.name as warehouse_name,
            sco.in_quantity,
            sco.in_money,
            sco.in_total_money,
            sco.out_quantity,
            sco.out_money,
            sco.out_total_money,
            u.name as user_name,
            if (
            pro.remark is not null,
            pro.remark,
            if (
            sro.remark is not null,
            sro.remark,
            if (
            sro1.remark is not null,
            sro1.remark,
            null
            ))) as remark
        from
            (
                (
                    (
                        (
                            (
                                (
                                    (
                                        (
                                            storage_check_order_${vo.storeId} as sco
                                            left join procurement_result_order_${vo.storeId} as pro on pro.id = sco.order_id
                                        )
                                        left join sell_result_order_${vo.storeId} as sro on sro.id = sco.order_id
                                    )
                                    left join storage_result_order_${vo.storeId} as sro1 on sro1.id = sco.order_id
                                )
                                left join goods_sku_${vo.storeId} as gs on gs.id = sco.goods_sku_id
                            )
                            left join goods_${vo.storeId} as g on g.id = gs.goods_id
                        )
                        left join supplier_${vo.storeId} as s on s.id = sco.target_id
                    )
                    left join client as c on c.id = sco.target_id
                )
                left join user_${vo.storeId} as u on u.id = sco.user_id
            )
        left join warehouse_${vo.storeId} as w on w.id = sco.warehouse_id
        where
            date(sco.create_time) between #{vo.startTime} and #{vo.endTime}
        <if test="vo.id != null">
            and g.id = #{vo.id}
        </if>
        <if test="vo.name != null">
            and g.name like concat('%', #{vo.name}, '%')
        </if>
        <if test="vo.barCode != null">
            and g.bar_code = #{vo.barCode}
        </if>
        <if test="vo.typeId != null">
            and g.type_id = #{vo.typeId}
        </if>
        order by
            sco.create_time asc
        limit
            #{pageVo.start}, #{pageVo.pageSize};
    </select>

    <!--资金报表-->

    <select id="findCountFundInByBankAccount" parameterType="com.yeta.pps.vo.ReportFundVo" resultType="java.lang.Integer">
        select
            count(0)
        from
            (
                select
                    date(fco.create_time) as create_time,
                    sum(fco.in_money) as total_in_money,
                    0.00 as cash_in_money,
                    0.00 as alipay_in_money,
                    0.00 as wechat_in_money,
                    0.00 as bank_card_in_money
                from
                    fund_check_order_${storeId} as fco
                where
                    date(fco.create_time) between #{startTime} and #{endTime}
                group by
                    date(fco.create_time)
            ) as temp;
    </select>

    <select id="findPagedFundInByBankAccount" resultType="com.yeta.pps.vo.ReportFundVo">
        select
            date(fco.create_time) as create_time,
            sum(fco.in_money) as total_in_money,
            0.00 as cash_in_money,
            0.00 as alipay_in_money,
            0.00 as wechat_in_money,
            0.00 as bank_card_in_money
        from
            fund_check_order_${vo.storeId} as fco
        where
            date(fco.create_time) between #{vo.startTime} and #{vo.endTime}
        group by
            date(fco.create_time)
        order by
            fco.create_time desc
        limit
            #{pageVo.start}, #{pageVo.pageSize};
    </select>

    <select id="findOrderQuantity" parameterType="com.yeta.pps.vo.ReportFundVo" resultType="java.lang.Integer">
        select
            count(0)
        from
            fund_check_order_${storeId} as fco
        where
            date(fco.create_time) between #{startTime} and #{endTime}
        <if test="flag == 1">
            group by date(fco.create_time)
            order by fco.create_time desc;
        </if>
        <if test="flag == 2">
            group by fco.user_id;
        </if>
    </select>

    <select id="findAllFundIn" parameterType="com.yeta.pps.vo.ReportFundVo" resultType="com.yeta.pps.vo.FundCheckOrderVo">
        select
            order_id, create_time, order_status, target_id, bank_account_id, in_money, out_money, balance_money, user_id
        from
            fund_check_order_${storeId} as fco
        where
            date(fco.create_time) between #{startTime} and #{endTime};
    </select>

    <select id="findCountFundInByUser" parameterType="com.yeta.pps.vo.ReportFundVo" resultType="java.lang.Integer">
        select
            count(0)
        from
            (
                select
                    sum(fco.in_money) as total_in_money,
                    0.00 as cash_in_money,
                    0.00 as alipay_in_money,
                    0.00 as wechat_in_money,
                    0.00 as bank_card_in_money
                from
                    fund_check_order_${storeId} as fco
                where
                    date(fco.create_time) between #{startTime} and #{endTime}
                group by
                    fco.user_id
            ) as temp;
    </select>

    <select id="findPagedFundInByUser" resultType="com.yeta.pps.vo.ReportFundVo">
        select
            fco.user_id,
            sum(fco.in_money) as total_in_money,
            0.00 as cash_in_money,
            0.00 as alipay_in_money,
            0.00 as wechat_in_money,
            0.00 as bank_card_in_money
        from
            fund_check_order_${vo.storeId} as fco
        where
            date(fco.create_time) between #{vo.startTime} and #{vo.endTime}
        group by
            fco.user_id
        limit
            #{pageVo.start}, #{pageVo.pageSize};
    </select>

    <select id="findCountFundOutByType" parameterType="com.yeta.pps.vo.ReportFundVo" resultType="java.lang.Integer">
        select
            count(0) + 1
        from
            (
                select
                    ie.id as expenses_id,
                    ie.name as expenses_name,
                    sum(fro.money) as total_out_money
                from
                    fund_result_order_${storeId} as fro
                inner join income_expenses_${storeId} as ie on ie.id = fro.income_expenses_id
                where
                    ie.type = 2
                and date(fro.create_time) between #{startTime} and #{endTime}
                group by
                    ie.id
            ) as temp;
    </select>

    <select id="findPagedFundOutByType" resultType="com.yeta.pps.vo.ReportFundVo">
        (
            select 
                ie.id as expenses_id,
                ie.name as expenses_name,
                sum(fro.money) as total_out_money
            from 
                fund_result_order_${vo.storeId} as fro
            inner join income_expenses_${vo.storeId} as ie on ie.id = fro.income_expenses_id
            where 
                ie.type = 2
            and date(fro.create_time) between #{vo.startTime} and #{vo.endTime}
            group by
                ie.id
        )
        union all
        (
            select 
                "660101" as expenses_id,
                "优惠金额" as expenses_name,
                if (sum(discount_money) is null, 0, sum(discount_money)) as total_out_money
            from 
                fund_order_${vo.storeId}
            where 
                type = 1
            and date(create_time) between #{vo.startTime} and #{vo.endTime}
        )
        limit
            #{pageVo.start}, #{pageVo.pageSize};
    </select>

    <select id="findCountFundOutByTarget" parameterType="com.yeta.pps.vo.ReportFundVo" resultType="java.lang.Integer">
        select
            count(0)
        from
            (
                select
                    target_id,
                    if (s.name is null, c.name, s.name) as target_name,
                    sum(fro.money) as total_out_money
                from
                    (
                        fund_result_order_${storeId} as fro
                        left join supplier_${storeId} as s on s.id = fro.target_id
                    )
                left join client as c on c.id = fro.target_id
                where
                    fro.type = 2
                and date(fro.create_time) between #{startTime} and #{endTime}
                and fro.target_id is not null
                group by
                    fro.target_id
            ) as temp;
    </select>

    <select id="findPagedFundOutByTarget" resultType="com.yeta.pps.vo.ReportFundVo">
        select
            target_id,
            if (s.name is null, c.name, s.name) as target_name,
            sum(fro.money) as total_out_money
        from
            (
                fund_result_order_${vo.storeId} as fro
                left join supplier_${vo.storeId} as s on s.id = fro.target_id
            )
        left join client as c on c.id = fro.target_id
        where
            fro.type = 2
        and date(fro.create_time) between #{vo.startTime} and #{vo.endTime}
        and fro.target_id is not null
        group by
            fro.target_id
        limit
            #{pageVo.start}, #{pageVo.pageSize};
    </select>

    <select id="findDiscountMoney" parameterType="com.yeta.pps.vo.ReportFundVo" resultType="java.lang.Double">
        select
            if (sum(discount_money) is null, 0, sum(discount_money)) as total_out_money
        from
            fund_order_${storeId}
        where
            type = 1
        and date(create_time) between #{startTime} and #{endTime}
        <if test="flag == 1">
            and target_id = #{targetId};
        </if>
        <if test="flag == 2">
            and user_id = #{userId};
        </if>
    </select>

    <select id="findCountFundOutByUser" parameterType="com.yeta.pps.vo.ReportFundVo" resultType="java.lang.Integer">
        select
            count(0)
        from
            (
                select
                    user_id,
                    u.name as user_name,
                    sum(fro.money) as total_out_money
                from
                    fund_result_order_${storeId} as fro
                left join user_${storeId} as u on u.id = fro.user_id
                where
                    fro.type = 2
                and date(fro.create_time) between #{startTime} and #{endTime}
                group by
                    fro.user_id
            ) as temp;
    </select>

    <select id="findPagedFundOutByUser" resultType="com.yeta.pps.vo.ReportFundVo">
        select
            user_id,
            u.name as user_name,
            sum(fro.money) as total_out_money
        from
            fund_result_order_${vo.storeId} as fro
        left join user_${vo.storeId} as u on u.id = fro.user_id
        where
            fro.type = 2
        and date(fro.create_time) between #{vo.startTime} and #{vo.endTime}
        group by
            fro.user_id
        limit
            #{pageVo.start}, #{pageVo.pageSize};
    </select>

    <select id="findCountFundOutByDetails" parameterType="com.yeta.pps.vo.ReportFundVo" resultType="java.lang.Integer">
        select
            count(0)
        from
            fund_check_order_${storeId} as fco
        left join fund_result_order_${storeId} as fro on fro.id = fco.order_id
        left join fund_order_${storeId} as fo on fo.id = fco.order_id
        left join supplier_${storeId} as s on s.id = fco.target_id
        left join client as c on c.id = fco.target_id
        left join income_expenses_${storeId} as ie on ie.id = fro.income_expenses_id
        left join user_${storeId} as u on u.id = fco.user_id
        where
            date(fco.create_time) between #{startTime} and #{endTime}
        and (fro.type = 2 or fo.type = 1)
    </select>

    <select id="findPagedFundOutByDetails" resultType="com.yeta.pps.vo.FundCheckOrderVo">
        select 
            fco.order_id,
            fco.create_time,
            fco.order_status,
            if (fro.type = 2,
                '费用单',
                '收款单'
            ) as type_name,
            fco.target_id,
            if (s.name is null, c.name, s.name) as target_name,
            fro.income_expenses_id as expenses_id,
            if (ie.name is null,
                '优惠金额',
                ie.name
            ) as expenses_name,
            if (fco.out_money = 0,
                fo.discount_money,
                fco.out_money
            ) as out_money,
            fco.user_id,
            u.name as user_name,
            if (fro.remark is null,
                fo.remark,
                fro.remark
            ) as remark
        from
            fund_check_order_${vo.storeId} as fco
        left join fund_result_order_${vo.storeId} as fro on fro.id = fco.order_id
        left join fund_order_${vo.storeId} as fo on fo.id = fco.order_id
        left join supplier_${vo.storeId} as s on s.id = fco.target_id
        left join client as c on c.id = fco.target_id
        left join income_expenses_${vo.storeId} as ie on ie.id = fro.income_expenses_id
        left join user_${vo.storeId} as u on u.id = fco.user_id
        where
            date(fco.create_time) between #{vo.startTime} and #{vo.endTime}
        and (fro.type = 2 or fo.type = 1)
        limit
            #{pageVo.start}, #{pageVo.pageSize};
    </select>

    <!--订单统计-->

    <select id="findCountOrderByOrder" parameterType="com.yeta.pps.vo.ReportOrderVo" resultType="java.lang.Integer">
        select
            count(0)
        from
            (
                select
                    date(sao.create_time) as create_time,
                    count(sao.type = 2 or null) as order_quantity,
                    count(sao.type = 3 or null) as return_quantity,
                    count(sao.type = 4 or null) as exchange_quantity,
                    sum(if (sao.type = 2, sao.order_money, 0)) as order_money,
                    sum(if (sao.type = 3, - sao.order_money, 0)) as return_money,
                    if (count(sao.type = 2 or null) = 0, 0, (if (sao.type = 2, sao.order_money, 0 ) / count(sao.type = 2 or null))) as average_order_money
                from
                    sell_apply_order_${storeId} as sao
                where
                    sao.type in (2, 3, 4)
                and date(sao.create_time) between #{startTime} and #{endTime}
                group by
                    date(sao.create_time)
            ) as temp;
    </select>

    <select id="findPagedOrderByOrder" resultType="com.yeta.pps.vo.ReportOrderVo">
        select 
            date(sao.create_time) as create_time,
            count(sao.type = 2 or null) as order_quantity,
            count(sao.type = 3 or null) as return_quantity,
            count(sao.type = 4 or null) as exchange_quantity,
            sum(if (sao.type = 2, sao.order_money, 0)) as order_money,
            sum(if (sao.type = 3, - sao.order_money, 0)) as return_money,
            if (count(sao.type = 2 or null) = 0, 0, (if (sao.type = 2, sao.order_money, 0 ) / count(sao.type = 2 or null))) as average_order_money
        from
            sell_apply_order_${vo.storeId} as sao
        where
            sao.type in (2, 3, 4)
        and date(sao.create_time) between #{vo.startTime} and #{vo.endTime}
        group by
            date(sao.create_time)
        order by
            date(sao.create_time)
        limit
            #{pageVo.start}, #{pageVo.pageSize};
    </select>

    <select id="findCountOrderByGoods" parameterType="com.yeta.pps.vo.ReportOrderVo" resultType="java.lang.Integer">
        select
            count(0)
        from
            (
                select
                    g.id as goods_id,
                    g.name as goods_name,
                    g.bar_code as goods_bar_code,
                    g.type_id as goods_type_id,
                    gt. NAME as goods_type_name,
                    g.image as goods_image,
                    count(sao.type = 2 or null) as order_quantity,
                    sum(if (sao.type = 2, ogs.money - ogs.discount_money, 0)) as order_money,
                    count(sao.type = 3 or null) as return_quantity,
                    sum(if (sao.type = 3, ogs.money - ogs.discount_money, 0)) as return_money,
                    if (count(sao.type = 3 or null) = 0, 0, if (count(sao.type = 2 or null) = 0, 1, count(sao.type = 3 or null) / count(sao.type = 2 or null))) as average_order_money,
                    (sum(if (sao.type = 2, ogs.money - ogs.discount_money, 0)) - sum(if (sao.type = 3, ogs.money - ogs.discount_money, 0))) as net_money
                from
                    sell_apply_order_${storeId} as sao
                left join order_goods_sku_${storeId} as ogs on ogs.order_id = sao.id
                left join goods_sku_${storeId} as gs on gs.id = ogs.goods_sku_id
                left join goods_${storeId} as g on g.id = gs.goods_id
                left join goods_type_${storeId} as gt on gt.id = g.type_id
                where
                    date(sao.create_time) between #{startTime} and #{endTime}
                and sao.type in (2, 3)
                <if test="goodsId != null">
                    and g.id = #{goodsId}
                </if>
                <if test="goodsName != null">
                    and g.name like concat('%', #{goodsName}, '%')
                </if>
                <if test="goodsBarCode != null">
                    and g.bar_code = #{goodsBarCode}
                </if>
                <if test="goodsTypeId != null">
                    and g.type_id = #{goodsTypeId}
                </if>
                group by
                    g.id
            ) as temp;
    </select>

    <select id="findPagedOrderByGoods" resultType="com.yeta.pps.vo.ReportOrderVo">
        select 
            g.id as goods_id,
            g.name as goods_name,
            g.bar_code as goods_bar_code,
            g.type_id as goods_type_id,
            gt.name as goods_type_name,
            g.image as goods_image,
            count(sao.type = 2 or null) as order_quantity,
            sum(if (sao.type = 2, ogs.money - ogs.discount_money, 0)) as order_money,
            count(sao.type = 3 or null) as return_quantity,
            sum(if (sao.type = 3, ogs.money - ogs.discount_money, 0)) as return_money,
            if (count(sao.type = 3 or null) = 0, 0, if (count(sao.type = 2 or null) = 0, 1, count(sao.type = 3 or null) / count(sao.type = 2 or null))) as average_order_money,
            (sum(if (sao.type = 2, ogs.money - ogs.discount_money, 0)) - sum(if (sao.type = 3, ogs.money - ogs.discount_money, 0))) as net_money
        from
            sell_apply_order_${vo.storeId} as sao
        left join order_goods_sku_${vo.storeId} as ogs on ogs.order_id = sao.id
        left join goods_sku_${vo.storeId} as gs on gs.id = ogs.goods_sku_id
        left join goods_${vo.storeId} as g on g.id = gs.goods_id
        left join goods_type_${vo.storeId} as gt on gt.id = g.type_id
        where
            date(sao.create_time) between #{vo.startTime} and #{vo.endTime}
        and sao.type in (2, 3)
        <if test="vo.goodsId != null">
            and g.id = #{vo.goodsId}
        </if>
        <if test="vo.goodsName != null">
            and g.name like concat('%', #{vo.goodsName}, '%')
        </if>
        <if test="vo.goodsBarCode != null">
            and g.bar_code = #{vo.goodsBarCode}
        </if>
        <if test="vo.goodsTypeId != null">
            and g.type_id = #{vo.goodsTypeId}
        </if>
        group by
            g.id
        limit
            #{pageVo.start}, #{pageVo.pageSize};
    </select>

    <select id="findCountOrderByClient" parameterType="com.yeta.pps.vo.ReportOrderVo" resultType="java.lang.Integer">
        select
            count(0)
        from
            (
                select
                    date(sao.create_time) as create_time,
                    count(distinct sao.client_id) as client_quantity,
                    count(0) as order_quantity,
                    sum(sao.order_money) as order_money,
                    count(0) / count(distinct sao.client_id) as average_client_order_quantity,
                    sum(sao.order_money) / count(distinct sao.client_id) as average_client_order_money
                from
                    sell_apply_order_${storeId} as sao
                where
                    date(sao.create_time) between #{startTime} and #{endTime}
                and sao.type = 2
                group by
                    date(sao.create_time)
            ) as temp;
    </select>

    <select id="findPagedOrderByClient" resultType="com.yeta.pps.vo.ReportOrderVo">
        select
            date(sao.create_time) as create_time,
            count(distinct sao.client_id) as client_quantity,
            count(0) as order_quantity,
            sum(sao.order_money) as order_money,
            count(0) / count(distinct sao.client_id) as average_client_order_quantity,
            sum(sao.order_money) / count(distinct sao.client_id) as average_client_order_money
        from
            sell_apply_order_${vo.storeId} as sao
        where
            date(sao.create_time) between #{vo.startTime} and #{vo.endTime}
        and sao.type = 2
        group by
            date(sao.create_time)
        limit
            #{pageVo.start}, #{pageVo.pageSize};
    </select>

</mapper>